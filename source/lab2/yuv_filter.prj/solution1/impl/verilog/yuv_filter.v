// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="yuv_filter,hls_ip_2020_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.723375,HLS_SYN_LAT=16478765,HLS_SYN_TPT=none,HLS_SYN_MEM=12288,HLS_SYN_DSP=6,HLS_SYN_FF=679,HLS_SYN_LUT=1446,HLS_VERSION=2020_1}" *)

module yuv_filter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_channels_ch1_address0,
        in_channels_ch1_ce0,
        in_channels_ch1_q0,
        in_channels_ch2_address0,
        in_channels_ch2_ce0,
        in_channels_ch2_q0,
        in_channels_ch3_address0,
        in_channels_ch3_ce0,
        in_channels_ch3_q0,
        in_width,
        in_height,
        out_channels_ch1_address0,
        out_channels_ch1_ce0,
        out_channels_ch1_we0,
        out_channels_ch1_d0,
        out_channels_ch2_address0,
        out_channels_ch2_ce0,
        out_channels_ch2_we0,
        out_channels_ch2_d0,
        out_channels_ch3_address0,
        out_channels_ch3_ce0,
        out_channels_ch3_we0,
        out_channels_ch3_d0,
        out_width,
        out_width_ap_vld,
        out_height,
        out_height_ap_vld,
        Y_scale,
        U_scale,
        V_scale
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [21:0] in_channels_ch1_address0;
output   in_channels_ch1_ce0;
input  [7:0] in_channels_ch1_q0;
output  [21:0] in_channels_ch2_address0;
output   in_channels_ch2_ce0;
input  [7:0] in_channels_ch2_q0;
output  [21:0] in_channels_ch3_address0;
output   in_channels_ch3_ce0;
input  [7:0] in_channels_ch3_q0;
input  [15:0] in_width;
input  [15:0] in_height;
output  [21:0] out_channels_ch1_address0;
output   out_channels_ch1_ce0;
output   out_channels_ch1_we0;
output  [7:0] out_channels_ch1_d0;
output  [21:0] out_channels_ch2_address0;
output   out_channels_ch2_ce0;
output   out_channels_ch2_we0;
output  [7:0] out_channels_ch2_d0;
output  [21:0] out_channels_ch3_address0;
output   out_channels_ch3_ce0;
output   out_channels_ch3_we0;
output  [7:0] out_channels_ch3_d0;
output  [15:0] out_width;
output   out_width_ap_vld;
output  [15:0] out_height;
output   out_height_ap_vld;
input  [7:0] Y_scale;
input  [7:0] U_scale;
input  [7:0] V_scale;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_width_ap_vld;
reg out_height_ap_vld;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] p_yuv_width_reg_450;
wire    ap_CS_fsm_state2;
wire    grp_rgb2yuv_fu_250_ap_ready;
wire    grp_rgb2yuv_fu_250_ap_done;
reg   [15:0] p_yuv_height_reg_456;
wire   [14:0] zext_ln134_fu_293_p1;
reg   [14:0] zext_ln134_reg_462;
wire   [14:0] zext_ln135_fu_297_p1;
reg   [14:0] zext_ln135_reg_467;
wire   [14:0] zext_ln125_fu_301_p1;
reg   [14:0] zext_ln125_reg_472;
wire   [15:0] x_fu_310_p2;
reg   [15:0] x_reg_480;
wire    ap_CS_fsm_state3;
wire   [22:0] add_ln130_fu_340_p2;
reg   [22:0] add_ln130_reg_485;
wire   [0:0] icmp_ln125_fu_305_p2;
wire   [15:0] y_fu_351_p2;
reg   [15:0] y_reg_493;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln130_1_fu_366_p1;
reg   [63:0] zext_ln130_1_reg_498;
wire   [0:0] icmp_ln128_fu_346_p2;
reg   [7:0] trunc_ln_reg_520;
wire    ap_CS_fsm_state7;
reg   [7:0] trunc_ln1_reg_525;
reg   [7:0] trunc_ln2_reg_530;
wire    ap_CS_fsm_state8;
reg   [21:0] p_yuv_channels_ch1_address0;
reg    p_yuv_channels_ch1_ce0;
reg    p_yuv_channels_ch1_we0;
wire   [7:0] p_yuv_channels_ch1_q0;
reg   [21:0] p_yuv_channels_ch2_address0;
reg    p_yuv_channels_ch2_ce0;
reg    p_yuv_channels_ch2_we0;
wire   [7:0] p_yuv_channels_ch2_q0;
reg   [21:0] p_yuv_channels_ch3_address0;
reg    p_yuv_channels_ch3_ce0;
reg    p_yuv_channels_ch3_we0;
wire   [7:0] p_yuv_channels_ch3_q0;
reg   [21:0] p_scale_channels_ch1_address0;
reg    p_scale_channels_ch1_ce0;
reg    p_scale_channels_ch1_we0;
wire   [7:0] p_scale_channels_ch1_q0;
reg   [21:0] p_scale_channels_ch2_address0;
reg    p_scale_channels_ch2_ce0;
reg    p_scale_channels_ch2_we0;
wire   [7:0] p_scale_channels_ch2_q0;
reg   [21:0] p_scale_channels_ch3_address0;
reg    p_scale_channels_ch3_ce0;
reg    p_scale_channels_ch3_we0;
wire   [7:0] p_scale_channels_ch3_q0;
wire    grp_rgb2yuv_fu_250_ap_start;
wire    grp_rgb2yuv_fu_250_ap_idle;
wire   [21:0] grp_rgb2yuv_fu_250_in_channels_ch1_address0;
wire    grp_rgb2yuv_fu_250_in_channels_ch1_ce0;
wire   [21:0] grp_rgb2yuv_fu_250_in_channels_ch2_address0;
wire    grp_rgb2yuv_fu_250_in_channels_ch2_ce0;
wire   [21:0] grp_rgb2yuv_fu_250_in_channels_ch3_address0;
wire    grp_rgb2yuv_fu_250_in_channels_ch3_ce0;
wire   [21:0] grp_rgb2yuv_fu_250_out_channels_ch1_address0;
wire    grp_rgb2yuv_fu_250_out_channels_ch1_ce0;
wire    grp_rgb2yuv_fu_250_out_channels_ch1_we0;
wire   [7:0] grp_rgb2yuv_fu_250_out_channels_ch1_d0;
wire   [21:0] grp_rgb2yuv_fu_250_out_channels_ch2_address0;
wire    grp_rgb2yuv_fu_250_out_channels_ch2_ce0;
wire    grp_rgb2yuv_fu_250_out_channels_ch2_we0;
wire   [7:0] grp_rgb2yuv_fu_250_out_channels_ch2_d0;
wire   [21:0] grp_rgb2yuv_fu_250_out_channels_ch3_address0;
wire    grp_rgb2yuv_fu_250_out_channels_ch3_ce0;
wire    grp_rgb2yuv_fu_250_out_channels_ch3_we0;
wire   [7:0] grp_rgb2yuv_fu_250_out_channels_ch3_d0;
wire   [15:0] grp_rgb2yuv_fu_250_ap_return_0;
wire   [15:0] grp_rgb2yuv_fu_250_ap_return_1;
wire    grp_yuv2rgb_fu_270_ap_start;
wire    grp_yuv2rgb_fu_270_ap_done;
wire    grp_yuv2rgb_fu_270_ap_idle;
wire    grp_yuv2rgb_fu_270_ap_ready;
wire   [21:0] grp_yuv2rgb_fu_270_in_channels_ch1_address0;
wire    grp_yuv2rgb_fu_270_in_channels_ch1_ce0;
wire   [21:0] grp_yuv2rgb_fu_270_in_channels_ch2_address0;
wire    grp_yuv2rgb_fu_270_in_channels_ch2_ce0;
wire   [21:0] grp_yuv2rgb_fu_270_in_channels_ch3_address0;
wire    grp_yuv2rgb_fu_270_in_channels_ch3_ce0;
wire   [21:0] grp_yuv2rgb_fu_270_out_channels_ch1_address0;
wire    grp_yuv2rgb_fu_270_out_channels_ch1_ce0;
wire    grp_yuv2rgb_fu_270_out_channels_ch1_we0;
wire   [7:0] grp_yuv2rgb_fu_270_out_channels_ch1_d0;
wire   [21:0] grp_yuv2rgb_fu_270_out_channels_ch2_address0;
wire    grp_yuv2rgb_fu_270_out_channels_ch2_ce0;
wire    grp_yuv2rgb_fu_270_out_channels_ch2_we0;
wire   [7:0] grp_yuv2rgb_fu_270_out_channels_ch2_d0;
wire   [21:0] grp_yuv2rgb_fu_270_out_channels_ch3_address0;
wire    grp_yuv2rgb_fu_270_out_channels_ch3_ce0;
wire    grp_yuv2rgb_fu_270_out_channels_ch3_we0;
wire   [7:0] grp_yuv2rgb_fu_270_out_channels_ch3_d0;
wire   [15:0] grp_yuv2rgb_fu_270_ap_return_0;
wire   [15:0] grp_yuv2rgb_fu_270_ap_return_1;
reg   [15:0] x_0_i_reg_228;
reg   [15:0] y_0_i_reg_239;
wire    ap_CS_fsm_state9;
reg    grp_rgb2yuv_fu_250_ap_start_reg;
reg    grp_yuv2rgb_fu_270_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [12:0] trunc_ln130_fu_316_p1;
wire   [14:0] trunc_ln130_1_fu_328_p1;
wire   [22:0] zext_ln130_cast_fu_320_p3;
wire   [22:0] zext_ln130_2_cast_fu_332_p3;
wire   [22:0] zext_ln130_fu_357_p1;
wire   [22:0] add_ln130_1_fu_361_p2;
wire   [7:0] mul_ln133_fu_377_p0;
wire   [7:0] mul_ln133_fu_377_p1;
wire   [7:0] mul_ln134_fu_386_p0;
wire   [7:0] mul_ln134_fu_386_p1;
wire   [7:0] mul_ln135_fu_395_p0;
wire   [7:0] mul_ln135_fu_395_p1;
wire   [14:0] mul_ln133_fu_377_p2;
wire   [14:0] mul_ln134_fu_386_p2;
wire   [14:0] mul_ln135_fu_395_p2;
reg   [9:0] ap_NS_fsm;
wire   [14:0] mul_ln133_fu_377_p10;
wire   [14:0] mul_ln134_fu_386_p10;
wire   [14:0] mul_ln135_fu_395_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 grp_rgb2yuv_fu_250_ap_start_reg = 1'b0;
#0 grp_yuv2rgb_fu_270_ap_start_reg = 1'b0;
end

yuv_filter_p_yuv_hbi #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_yuv_channels_ch1_address0),
    .ce0(p_yuv_channels_ch1_ce0),
    .we0(p_yuv_channels_ch1_we0),
    .d0(grp_rgb2yuv_fu_250_out_channels_ch1_d0),
    .q0(p_yuv_channels_ch1_q0)
);

yuv_filter_p_yuv_hbi #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_yuv_channels_ch2_address0),
    .ce0(p_yuv_channels_ch2_ce0),
    .we0(p_yuv_channels_ch2_we0),
    .d0(grp_rgb2yuv_fu_250_out_channels_ch2_d0),
    .q0(p_yuv_channels_ch2_q0)
);

yuv_filter_p_yuv_hbi #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_yuv_channels_ch3_address0),
    .ce0(p_yuv_channels_ch3_ce0),
    .we0(p_yuv_channels_ch3_we0),
    .d0(grp_rgb2yuv_fu_250_out_channels_ch3_d0),
    .q0(p_yuv_channels_ch3_q0)
);

yuv_filter_p_yuv_hbi #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_scale_channels_ch1_address0),
    .ce0(p_scale_channels_ch1_ce0),
    .we0(p_scale_channels_ch1_we0),
    .d0(trunc_ln_reg_520),
    .q0(p_scale_channels_ch1_q0)
);

yuv_filter_p_yuv_hbi #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_scale_channels_ch2_address0),
    .ce0(p_scale_channels_ch2_ce0),
    .we0(p_scale_channels_ch2_we0),
    .d0(trunc_ln1_reg_525),
    .q0(p_scale_channels_ch2_q0)
);

yuv_filter_p_yuv_hbi #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_scale_channels_ch3_address0),
    .ce0(p_scale_channels_ch3_ce0),
    .we0(p_scale_channels_ch3_we0),
    .d0(trunc_ln2_reg_530),
    .q0(p_scale_channels_ch3_q0)
);

rgb2yuv grp_rgb2yuv_fu_250(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rgb2yuv_fu_250_ap_start),
    .ap_done(grp_rgb2yuv_fu_250_ap_done),
    .ap_idle(grp_rgb2yuv_fu_250_ap_idle),
    .ap_ready(grp_rgb2yuv_fu_250_ap_ready),
    .in_channels_ch1_address0(grp_rgb2yuv_fu_250_in_channels_ch1_address0),
    .in_channels_ch1_ce0(grp_rgb2yuv_fu_250_in_channels_ch1_ce0),
    .in_channels_ch1_q0(in_channels_ch1_q0),
    .in_channels_ch2_address0(grp_rgb2yuv_fu_250_in_channels_ch2_address0),
    .in_channels_ch2_ce0(grp_rgb2yuv_fu_250_in_channels_ch2_ce0),
    .in_channels_ch2_q0(in_channels_ch2_q0),
    .in_channels_ch3_address0(grp_rgb2yuv_fu_250_in_channels_ch3_address0),
    .in_channels_ch3_ce0(grp_rgb2yuv_fu_250_in_channels_ch3_ce0),
    .in_channels_ch3_q0(in_channels_ch3_q0),
    .in_width_read(in_width),
    .in_height_read(in_height),
    .out_channels_ch1_address0(grp_rgb2yuv_fu_250_out_channels_ch1_address0),
    .out_channels_ch1_ce0(grp_rgb2yuv_fu_250_out_channels_ch1_ce0),
    .out_channels_ch1_we0(grp_rgb2yuv_fu_250_out_channels_ch1_we0),
    .out_channels_ch1_d0(grp_rgb2yuv_fu_250_out_channels_ch1_d0),
    .out_channels_ch2_address0(grp_rgb2yuv_fu_250_out_channels_ch2_address0),
    .out_channels_ch2_ce0(grp_rgb2yuv_fu_250_out_channels_ch2_ce0),
    .out_channels_ch2_we0(grp_rgb2yuv_fu_250_out_channels_ch2_we0),
    .out_channels_ch2_d0(grp_rgb2yuv_fu_250_out_channels_ch2_d0),
    .out_channels_ch3_address0(grp_rgb2yuv_fu_250_out_channels_ch3_address0),
    .out_channels_ch3_ce0(grp_rgb2yuv_fu_250_out_channels_ch3_ce0),
    .out_channels_ch3_we0(grp_rgb2yuv_fu_250_out_channels_ch3_we0),
    .out_channels_ch3_d0(grp_rgb2yuv_fu_250_out_channels_ch3_d0),
    .ap_return_0(grp_rgb2yuv_fu_250_ap_return_0),
    .ap_return_1(grp_rgb2yuv_fu_250_ap_return_1)
);

yuv2rgb grp_yuv2rgb_fu_270(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_yuv2rgb_fu_270_ap_start),
    .ap_done(grp_yuv2rgb_fu_270_ap_done),
    .ap_idle(grp_yuv2rgb_fu_270_ap_idle),
    .ap_ready(grp_yuv2rgb_fu_270_ap_ready),
    .in_channels_ch1_address0(grp_yuv2rgb_fu_270_in_channels_ch1_address0),
    .in_channels_ch1_ce0(grp_yuv2rgb_fu_270_in_channels_ch1_ce0),
    .in_channels_ch1_q0(p_scale_channels_ch1_q0),
    .in_channels_ch2_address0(grp_yuv2rgb_fu_270_in_channels_ch2_address0),
    .in_channels_ch2_ce0(grp_yuv2rgb_fu_270_in_channels_ch2_ce0),
    .in_channels_ch2_q0(p_scale_channels_ch2_q0),
    .in_channels_ch3_address0(grp_yuv2rgb_fu_270_in_channels_ch3_address0),
    .in_channels_ch3_ce0(grp_yuv2rgb_fu_270_in_channels_ch3_ce0),
    .in_channels_ch3_q0(p_scale_channels_ch3_q0),
    .in_width_read(p_yuv_width_reg_450),
    .in_height_read(p_yuv_height_reg_456),
    .out_channels_ch1_address0(grp_yuv2rgb_fu_270_out_channels_ch1_address0),
    .out_channels_ch1_ce0(grp_yuv2rgb_fu_270_out_channels_ch1_ce0),
    .out_channels_ch1_we0(grp_yuv2rgb_fu_270_out_channels_ch1_we0),
    .out_channels_ch1_d0(grp_yuv2rgb_fu_270_out_channels_ch1_d0),
    .out_channels_ch2_address0(grp_yuv2rgb_fu_270_out_channels_ch2_address0),
    .out_channels_ch2_ce0(grp_yuv2rgb_fu_270_out_channels_ch2_ce0),
    .out_channels_ch2_we0(grp_yuv2rgb_fu_270_out_channels_ch2_we0),
    .out_channels_ch2_d0(grp_yuv2rgb_fu_270_out_channels_ch2_d0),
    .out_channels_ch3_address0(grp_yuv2rgb_fu_270_out_channels_ch3_address0),
    .out_channels_ch3_ce0(grp_yuv2rgb_fu_270_out_channels_ch3_ce0),
    .out_channels_ch3_we0(grp_yuv2rgb_fu_270_out_channels_ch3_we0),
    .out_channels_ch3_d0(grp_yuv2rgb_fu_270_out_channels_ch3_d0),
    .ap_return_0(grp_yuv2rgb_fu_270_ap_return_0),
    .ap_return_1(grp_yuv2rgb_fu_270_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rgb2yuv_fu_250_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_rgb2yuv_fu_250_ap_start_reg <= 1'b1;
        end else if ((grp_rgb2yuv_fu_250_ap_ready == 1'b1)) begin
            grp_rgb2yuv_fu_250_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_yuv2rgb_fu_270_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln125_fu_305_p2 == 1'd1))) begin
            grp_yuv2rgb_fu_270_ap_start_reg <= 1'b1;
        end else if ((grp_yuv2rgb_fu_270_ap_ready == 1'b1)) begin
            grp_yuv2rgb_fu_270_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln128_fu_346_p2 == 1'd1))) begin
        x_0_i_reg_228 <= x_reg_480;
    end else if (((grp_rgb2yuv_fu_250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        x_0_i_reg_228 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        y_0_i_reg_239 <= y_reg_493;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln125_fu_305_p2 == 1'd0))) begin
        y_0_i_reg_239 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln125_fu_305_p2 == 1'd0))) begin
        add_ln130_reg_485[22 : 8] <= add_ln130_fu_340_p2[22 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_rgb2yuv_fu_250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_yuv_height_reg_456 <= grp_rgb2yuv_fu_250_ap_return_1;
        p_yuv_width_reg_450 <= grp_rgb2yuv_fu_250_ap_return_0;
        zext_ln125_reg_472[7 : 0] <= zext_ln125_fu_301_p1[7 : 0];
        zext_ln134_reg_462[7 : 0] <= zext_ln134_fu_293_p1[7 : 0];
        zext_ln135_reg_467[7 : 0] <= zext_ln135_fu_297_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln1_reg_525 <= {{mul_ln134_fu_386_p2[14:7]}};
        trunc_ln2_reg_530 <= {{mul_ln135_fu_395_p2[14:7]}};
        trunc_ln_reg_520 <= {{mul_ln133_fu_377_p2[14:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_reg_480 <= x_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        y_reg_493 <= y_fu_351_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln128_fu_346_p2 == 1'd0))) begin
        zext_ln130_1_reg_498[22 : 0] <= zext_ln130_1_fu_366_p1[22 : 0];
    end
end

always @ (*) begin
    if (((grp_yuv2rgb_fu_270_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_yuv2rgb_fu_270_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_yuv2rgb_fu_270_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        out_height_ap_vld = 1'b1;
    end else begin
        out_height_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_yuv2rgb_fu_270_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        out_width_ap_vld = 1'b1;
    end else begin
        out_width_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch1_address0 = zext_ln130_1_reg_498;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_scale_channels_ch1_address0 = grp_yuv2rgb_fu_270_in_channels_ch1_address0;
    end else begin
        p_scale_channels_ch1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        p_scale_channels_ch1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_scale_channels_ch1_ce0 = grp_yuv2rgb_fu_270_in_channels_ch1_ce0;
    end else begin
        p_scale_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch1_we0 = 1'b1;
    end else begin
        p_scale_channels_ch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch2_address0 = zext_ln130_1_reg_498;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_scale_channels_ch2_address0 = grp_yuv2rgb_fu_270_in_channels_ch2_address0;
    end else begin
        p_scale_channels_ch2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        p_scale_channels_ch2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_scale_channels_ch2_ce0 = grp_yuv2rgb_fu_270_in_channels_ch2_ce0;
    end else begin
        p_scale_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch2_we0 = 1'b1;
    end else begin
        p_scale_channels_ch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch3_address0 = zext_ln130_1_reg_498;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_scale_channels_ch3_address0 = grp_yuv2rgb_fu_270_in_channels_ch3_address0;
    end else begin
        p_scale_channels_ch3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        p_scale_channels_ch3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_scale_channels_ch3_ce0 = grp_yuv2rgb_fu_270_in_channels_ch3_ce0;
    end else begin
        p_scale_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch3_we0 = 1'b1;
    end else begin
        p_scale_channels_ch3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_yuv_channels_ch1_address0 = zext_ln130_1_fu_366_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch1_address0 = grp_rgb2yuv_fu_250_out_channels_ch1_address0;
    end else begin
        p_yuv_channels_ch1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        p_yuv_channels_ch1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch1_ce0 = grp_rgb2yuv_fu_250_out_channels_ch1_ce0;
    end else begin
        p_yuv_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch1_we0 = grp_rgb2yuv_fu_250_out_channels_ch1_we0;
    end else begin
        p_yuv_channels_ch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_yuv_channels_ch2_address0 = zext_ln130_1_fu_366_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch2_address0 = grp_rgb2yuv_fu_250_out_channels_ch2_address0;
    end else begin
        p_yuv_channels_ch2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        p_yuv_channels_ch2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch2_ce0 = grp_rgb2yuv_fu_250_out_channels_ch2_ce0;
    end else begin
        p_yuv_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch2_we0 = grp_rgb2yuv_fu_250_out_channels_ch2_we0;
    end else begin
        p_yuv_channels_ch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_yuv_channels_ch3_address0 = zext_ln130_1_fu_366_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch3_address0 = grp_rgb2yuv_fu_250_out_channels_ch3_address0;
    end else begin
        p_yuv_channels_ch3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        p_yuv_channels_ch3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch3_ce0 = grp_rgb2yuv_fu_250_out_channels_ch3_ce0;
    end else begin
        p_yuv_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch3_we0 = grp_rgb2yuv_fu_250_out_channels_ch3_we0;
    end else begin
        p_yuv_channels_ch3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_rgb2yuv_fu_250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln125_fu_305_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln128_fu_346_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_yuv2rgb_fu_270_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln130_1_fu_361_p2 = (add_ln130_reg_485 + zext_ln130_fu_357_p1);

assign add_ln130_fu_340_p2 = (zext_ln130_cast_fu_320_p3 + zext_ln130_2_cast_fu_332_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_rgb2yuv_fu_250_ap_start = grp_rgb2yuv_fu_250_ap_start_reg;

assign grp_yuv2rgb_fu_270_ap_start = grp_yuv2rgb_fu_270_ap_start_reg;

assign icmp_ln125_fu_305_p2 = ((x_0_i_reg_228 == p_yuv_width_reg_450) ? 1'b1 : 1'b0);

assign icmp_ln128_fu_346_p2 = ((y_0_i_reg_239 == p_yuv_height_reg_456) ? 1'b1 : 1'b0);

assign in_channels_ch1_address0 = grp_rgb2yuv_fu_250_in_channels_ch1_address0;

assign in_channels_ch1_ce0 = grp_rgb2yuv_fu_250_in_channels_ch1_ce0;

assign in_channels_ch2_address0 = grp_rgb2yuv_fu_250_in_channels_ch2_address0;

assign in_channels_ch2_ce0 = grp_rgb2yuv_fu_250_in_channels_ch2_ce0;

assign in_channels_ch3_address0 = grp_rgb2yuv_fu_250_in_channels_ch3_address0;

assign in_channels_ch3_ce0 = grp_rgb2yuv_fu_250_in_channels_ch3_ce0;

assign mul_ln133_fu_377_p0 = zext_ln134_reg_462;

assign mul_ln133_fu_377_p1 = mul_ln133_fu_377_p10;

assign mul_ln133_fu_377_p10 = p_yuv_channels_ch1_q0;

assign mul_ln133_fu_377_p2 = (mul_ln133_fu_377_p0 * mul_ln133_fu_377_p1);

assign mul_ln134_fu_386_p0 = zext_ln135_reg_467;

assign mul_ln134_fu_386_p1 = mul_ln134_fu_386_p10;

assign mul_ln134_fu_386_p10 = p_yuv_channels_ch2_q0;

assign mul_ln134_fu_386_p2 = (mul_ln134_fu_386_p0 * mul_ln134_fu_386_p1);

assign mul_ln135_fu_395_p0 = zext_ln125_reg_472;

assign mul_ln135_fu_395_p1 = mul_ln135_fu_395_p10;

assign mul_ln135_fu_395_p10 = p_yuv_channels_ch3_q0;

assign mul_ln135_fu_395_p2 = (mul_ln135_fu_395_p0 * mul_ln135_fu_395_p1);

assign out_channels_ch1_address0 = grp_yuv2rgb_fu_270_out_channels_ch1_address0;

assign out_channels_ch1_ce0 = grp_yuv2rgb_fu_270_out_channels_ch1_ce0;

assign out_channels_ch1_d0 = grp_yuv2rgb_fu_270_out_channels_ch1_d0;

assign out_channels_ch1_we0 = grp_yuv2rgb_fu_270_out_channels_ch1_we0;

assign out_channels_ch2_address0 = grp_yuv2rgb_fu_270_out_channels_ch2_address0;

assign out_channels_ch2_ce0 = grp_yuv2rgb_fu_270_out_channels_ch2_ce0;

assign out_channels_ch2_d0 = grp_yuv2rgb_fu_270_out_channels_ch2_d0;

assign out_channels_ch2_we0 = grp_yuv2rgb_fu_270_out_channels_ch2_we0;

assign out_channels_ch3_address0 = grp_yuv2rgb_fu_270_out_channels_ch3_address0;

assign out_channels_ch3_ce0 = grp_yuv2rgb_fu_270_out_channels_ch3_ce0;

assign out_channels_ch3_d0 = grp_yuv2rgb_fu_270_out_channels_ch3_d0;

assign out_channels_ch3_we0 = grp_yuv2rgb_fu_270_out_channels_ch3_we0;

assign out_height = grp_yuv2rgb_fu_270_ap_return_1;

assign out_width = grp_yuv2rgb_fu_270_ap_return_0;

assign trunc_ln130_1_fu_328_p1 = x_0_i_reg_228[14:0];

assign trunc_ln130_fu_316_p1 = x_0_i_reg_228[12:0];

assign x_fu_310_p2 = (x_0_i_reg_228 + 16'd1);

assign y_fu_351_p2 = (y_0_i_reg_239 + 16'd1);

assign zext_ln125_fu_301_p1 = V_scale;

assign zext_ln130_1_fu_366_p1 = add_ln130_1_fu_361_p2;

assign zext_ln130_2_cast_fu_332_p3 = {{trunc_ln130_1_fu_328_p1}, {8'd0}};

assign zext_ln130_cast_fu_320_p3 = {{trunc_ln130_fu_316_p1}, {10'd0}};

assign zext_ln130_fu_357_p1 = y_0_i_reg_239;

assign zext_ln134_fu_293_p1 = Y_scale;

assign zext_ln135_fu_297_p1 = U_scale;

always @ (posedge ap_clk) begin
    zext_ln134_reg_462[14:8] <= 7'b0000000;
    zext_ln135_reg_467[14:8] <= 7'b0000000;
    zext_ln125_reg_472[14:8] <= 7'b0000000;
    add_ln130_reg_485[7:0] <= 8'b00000000;
    zext_ln130_1_reg_498[63:23] <= 41'b00000000000000000000000000000000000000000;
end

endmodule //yuv_filter
