-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yuv_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch1_ce0 : OUT STD_LOGIC;
    in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch2_ce0 : OUT STD_LOGIC;
    in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch3_ce0 : OUT STD_LOGIC;
    in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_width : IN STD_LOGIC_VECTOR (15 downto 0);
    in_height : IN STD_LOGIC_VECTOR (15 downto 0);
    out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch1_ce0 : OUT STD_LOGIC;
    out_channels_ch1_we0 : OUT STD_LOGIC;
    out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch2_ce0 : OUT STD_LOGIC;
    out_channels_ch2_we0 : OUT STD_LOGIC;
    out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch3_ce0 : OUT STD_LOGIC;
    out_channels_ch3_we0 : OUT STD_LOGIC;
    out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_width : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_width_ap_vld : OUT STD_LOGIC;
    out_height : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_height_ap_vld : OUT STD_LOGIC;
    Y_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    U_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    V_scale : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of yuv_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "yuv_filter,hls_ip_2020_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.723375,HLS_SYN_LAT=16478765,HLS_SYN_TPT=none,HLS_SYN_MEM=12288,HLS_SYN_DSP=6,HLS_SYN_FF=679,HLS_SYN_LUT=1446,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_yuv_width_reg_450 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_rgb2yuv_fu_250_ap_ready : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_ap_done : STD_LOGIC;
    signal p_yuv_height_reg_456 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln134_fu_293_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln134_reg_462 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln135_fu_297_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln135_reg_467 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln125_fu_301_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln125_reg_472 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_fu_310_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_reg_480 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln130_fu_340_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln130_reg_485 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln125_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_fu_351_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_reg_493 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln130_1_fu_366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln130_1_reg_498 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln128_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_reg_520 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal trunc_ln1_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2_reg_530 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_yuv_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch1_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch1_we0 : STD_LOGIC;
    signal p_yuv_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch2_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch2_we0 : STD_LOGIC;
    signal p_yuv_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch3_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch3_we0 : STD_LOGIC;
    signal p_yuv_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch1_ce0 : STD_LOGIC;
    signal p_scale_channels_ch1_we0 : STD_LOGIC;
    signal p_scale_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch2_ce0 : STD_LOGIC;
    signal p_scale_channels_ch2_we0 : STD_LOGIC;
    signal p_scale_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch3_ce0 : STD_LOGIC;
    signal p_scale_channels_ch3_we0 : STD_LOGIC;
    signal p_scale_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_fu_250_ap_start : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_ap_idle : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_fu_250_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_fu_250_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_fu_250_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_fu_250_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_fu_250_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_fu_250_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_fu_250_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_fu_250_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_rgb2yuv_fu_250_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_fu_250_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_rgb2yuv_fu_250_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv2rgb_fu_270_ap_start : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_ap_done : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_ap_idle : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_ap_ready : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_fu_270_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_fu_270_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_fu_270_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_fu_270_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv2rgb_fu_270_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_fu_270_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv2rgb_fu_270_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_fu_270_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv2rgb_fu_270_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv2rgb_fu_270_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv2rgb_fu_270_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_0_i_reg_228 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_0_i_reg_239 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_rgb2yuv_fu_250_ap_start_reg : STD_LOGIC := '0';
    signal grp_yuv2rgb_fu_270_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal trunc_ln130_fu_316_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln130_1_fu_328_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln130_cast_fu_320_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln130_2_cast_fu_332_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln130_fu_357_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln130_1_fu_361_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln133_fu_377_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln133_fu_377_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln134_fu_386_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln134_fu_386_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln135_fu_395_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln135_fu_395_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln133_fu_377_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln134_fu_386_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln135_fu_395_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln133_fu_377_p10 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln134_fu_386_p10 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln135_fu_395_p10 : STD_LOGIC_VECTOR (14 downto 0);

    component rgb2yuv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_width_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_height_read : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv2rgb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_width_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_height_read : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_p_yuv_hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    p_yuv_channels_ch1_U : component yuv_filter_p_yuv_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch1_address0,
        ce0 => p_yuv_channels_ch1_ce0,
        we0 => p_yuv_channels_ch1_we0,
        d0 => grp_rgb2yuv_fu_250_out_channels_ch1_d0,
        q0 => p_yuv_channels_ch1_q0);

    p_yuv_channels_ch2_U : component yuv_filter_p_yuv_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch2_address0,
        ce0 => p_yuv_channels_ch2_ce0,
        we0 => p_yuv_channels_ch2_we0,
        d0 => grp_rgb2yuv_fu_250_out_channels_ch2_d0,
        q0 => p_yuv_channels_ch2_q0);

    p_yuv_channels_ch3_U : component yuv_filter_p_yuv_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch3_address0,
        ce0 => p_yuv_channels_ch3_ce0,
        we0 => p_yuv_channels_ch3_we0,
        d0 => grp_rgb2yuv_fu_250_out_channels_ch3_d0,
        q0 => p_yuv_channels_ch3_q0);

    p_scale_channels_ch1_U : component yuv_filter_p_yuv_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch1_address0,
        ce0 => p_scale_channels_ch1_ce0,
        we0 => p_scale_channels_ch1_we0,
        d0 => trunc_ln_reg_520,
        q0 => p_scale_channels_ch1_q0);

    p_scale_channels_ch2_U : component yuv_filter_p_yuv_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch2_address0,
        ce0 => p_scale_channels_ch2_ce0,
        we0 => p_scale_channels_ch2_we0,
        d0 => trunc_ln1_reg_525,
        q0 => p_scale_channels_ch2_q0);

    p_scale_channels_ch3_U : component yuv_filter_p_yuv_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch3_address0,
        ce0 => p_scale_channels_ch3_ce0,
        we0 => p_scale_channels_ch3_we0,
        d0 => trunc_ln2_reg_530,
        q0 => p_scale_channels_ch3_q0);

    grp_rgb2yuv_fu_250 : component rgb2yuv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rgb2yuv_fu_250_ap_start,
        ap_done => grp_rgb2yuv_fu_250_ap_done,
        ap_idle => grp_rgb2yuv_fu_250_ap_idle,
        ap_ready => grp_rgb2yuv_fu_250_ap_ready,
        in_channels_ch1_address0 => grp_rgb2yuv_fu_250_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_rgb2yuv_fu_250_in_channels_ch1_ce0,
        in_channels_ch1_q0 => in_channels_ch1_q0,
        in_channels_ch2_address0 => grp_rgb2yuv_fu_250_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_rgb2yuv_fu_250_in_channels_ch2_ce0,
        in_channels_ch2_q0 => in_channels_ch2_q0,
        in_channels_ch3_address0 => grp_rgb2yuv_fu_250_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_rgb2yuv_fu_250_in_channels_ch3_ce0,
        in_channels_ch3_q0 => in_channels_ch3_q0,
        in_width_read => in_width,
        in_height_read => in_height,
        out_channels_ch1_address0 => grp_rgb2yuv_fu_250_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_rgb2yuv_fu_250_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_rgb2yuv_fu_250_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_rgb2yuv_fu_250_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_rgb2yuv_fu_250_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_rgb2yuv_fu_250_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_rgb2yuv_fu_250_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_rgb2yuv_fu_250_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_rgb2yuv_fu_250_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_rgb2yuv_fu_250_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_rgb2yuv_fu_250_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_rgb2yuv_fu_250_out_channels_ch3_d0,
        ap_return_0 => grp_rgb2yuv_fu_250_ap_return_0,
        ap_return_1 => grp_rgb2yuv_fu_250_ap_return_1);

    grp_yuv2rgb_fu_270 : component yuv2rgb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv2rgb_fu_270_ap_start,
        ap_done => grp_yuv2rgb_fu_270_ap_done,
        ap_idle => grp_yuv2rgb_fu_270_ap_idle,
        ap_ready => grp_yuv2rgb_fu_270_ap_ready,
        in_channels_ch1_address0 => grp_yuv2rgb_fu_270_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv2rgb_fu_270_in_channels_ch1_ce0,
        in_channels_ch1_q0 => p_scale_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv2rgb_fu_270_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv2rgb_fu_270_in_channels_ch2_ce0,
        in_channels_ch2_q0 => p_scale_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv2rgb_fu_270_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv2rgb_fu_270_in_channels_ch3_ce0,
        in_channels_ch3_q0 => p_scale_channels_ch3_q0,
        in_width_read => p_yuv_width_reg_450,
        in_height_read => p_yuv_height_reg_456,
        out_channels_ch1_address0 => grp_yuv2rgb_fu_270_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv2rgb_fu_270_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv2rgb_fu_270_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv2rgb_fu_270_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv2rgb_fu_270_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv2rgb_fu_270_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv2rgb_fu_270_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv2rgb_fu_270_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv2rgb_fu_270_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv2rgb_fu_270_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv2rgb_fu_270_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv2rgb_fu_270_out_channels_ch3_d0,
        ap_return_0 => grp_yuv2rgb_fu_270_ap_return_0,
        ap_return_1 => grp_yuv2rgb_fu_270_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_rgb2yuv_fu_250_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rgb2yuv_fu_250_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_rgb2yuv_fu_250_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rgb2yuv_fu_250_ap_ready = ap_const_logic_1)) then 
                    grp_rgb2yuv_fu_250_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_yuv2rgb_fu_270_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_yuv2rgb_fu_270_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln125_fu_305_p2 = ap_const_lv1_1))) then 
                    grp_yuv2rgb_fu_270_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_yuv2rgb_fu_270_ap_ready = ap_const_logic_1)) then 
                    grp_yuv2rgb_fu_270_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_0_i_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln128_fu_346_p2 = ap_const_lv1_1))) then 
                x_0_i_reg_228 <= x_reg_480;
            elsif (((grp_rgb2yuv_fu_250_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                x_0_i_reg_228 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    y_0_i_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                y_0_i_reg_239 <= y_reg_493;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln125_fu_305_p2 = ap_const_lv1_0))) then 
                y_0_i_reg_239 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln125_fu_305_p2 = ap_const_lv1_0))) then
                    add_ln130_reg_485(22 downto 8) <= add_ln130_fu_340_p2(22 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_rgb2yuv_fu_250_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                p_yuv_height_reg_456 <= grp_rgb2yuv_fu_250_ap_return_1;
                p_yuv_width_reg_450 <= grp_rgb2yuv_fu_250_ap_return_0;
                    zext_ln125_reg_472(7 downto 0) <= zext_ln125_fu_301_p1(7 downto 0);
                    zext_ln134_reg_462(7 downto 0) <= zext_ln134_fu_293_p1(7 downto 0);
                    zext_ln135_reg_467(7 downto 0) <= zext_ln135_fu_297_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                trunc_ln1_reg_525 <= mul_ln134_fu_386_p2(14 downto 7);
                trunc_ln2_reg_530 <= mul_ln135_fu_395_p2(14 downto 7);
                trunc_ln_reg_520 <= mul_ln133_fu_377_p2(14 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                x_reg_480 <= x_fu_310_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                y_reg_493 <= y_fu_351_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln128_fu_346_p2 = ap_const_lv1_0))) then
                    zext_ln130_1_reg_498(22 downto 0) <= zext_ln130_1_fu_366_p1(22 downto 0);
            end if;
        end if;
    end process;
    zext_ln134_reg_462(14 downto 8) <= "0000000";
    zext_ln135_reg_467(14 downto 8) <= "0000000";
    zext_ln125_reg_472(14 downto 8) <= "0000000";
    add_ln130_reg_485(7 downto 0) <= "00000000";
    zext_ln130_1_reg_498(63 downto 23) <= "00000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2yuv_fu_250_ap_done, ap_CS_fsm_state3, icmp_ln125_fu_305_p2, ap_CS_fsm_state4, icmp_ln128_fu_346_p2, grp_yuv2rgb_fu_270_ap_done, ap_CS_fsm_state10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_rgb2yuv_fu_250_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln125_fu_305_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln128_fu_346_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state10 => 
                if (((grp_yuv2rgb_fu_270_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln130_1_fu_361_p2 <= std_logic_vector(unsigned(add_ln130_reg_485) + unsigned(zext_ln130_fu_357_p1));
    add_ln130_fu_340_p2 <= std_logic_vector(unsigned(zext_ln130_cast_fu_320_p3) + unsigned(zext_ln130_2_cast_fu_332_p3));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(grp_yuv2rgb_fu_270_ap_done, ap_CS_fsm_state10)
    begin
        if (((grp_yuv2rgb_fu_270_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_yuv2rgb_fu_270_ap_done, ap_CS_fsm_state10)
    begin
        if (((grp_yuv2rgb_fu_270_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_rgb2yuv_fu_250_ap_start <= grp_rgb2yuv_fu_250_ap_start_reg;
    grp_yuv2rgb_fu_270_ap_start <= grp_yuv2rgb_fu_270_ap_start_reg;
    icmp_ln125_fu_305_p2 <= "1" when (x_0_i_reg_228 = p_yuv_width_reg_450) else "0";
    icmp_ln128_fu_346_p2 <= "1" when (y_0_i_reg_239 = p_yuv_height_reg_456) else "0";
    in_channels_ch1_address0 <= grp_rgb2yuv_fu_250_in_channels_ch1_address0;
    in_channels_ch1_ce0 <= grp_rgb2yuv_fu_250_in_channels_ch1_ce0;
    in_channels_ch2_address0 <= grp_rgb2yuv_fu_250_in_channels_ch2_address0;
    in_channels_ch2_ce0 <= grp_rgb2yuv_fu_250_in_channels_ch2_ce0;
    in_channels_ch3_address0 <= grp_rgb2yuv_fu_250_in_channels_ch3_address0;
    in_channels_ch3_ce0 <= grp_rgb2yuv_fu_250_in_channels_ch3_ce0;
    mul_ln133_fu_377_p0 <= zext_ln134_reg_462(8 - 1 downto 0);
    mul_ln133_fu_377_p1 <= mul_ln133_fu_377_p10(8 - 1 downto 0);
    mul_ln133_fu_377_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_yuv_channels_ch1_q0),15));
    mul_ln133_fu_377_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln133_fu_377_p0) * unsigned(mul_ln133_fu_377_p1), 15));
    mul_ln134_fu_386_p0 <= zext_ln135_reg_467(8 - 1 downto 0);
    mul_ln134_fu_386_p1 <= mul_ln134_fu_386_p10(8 - 1 downto 0);
    mul_ln134_fu_386_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_yuv_channels_ch2_q0),15));
    mul_ln134_fu_386_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln134_fu_386_p0) * unsigned(mul_ln134_fu_386_p1), 15));
    mul_ln135_fu_395_p0 <= zext_ln125_reg_472(8 - 1 downto 0);
    mul_ln135_fu_395_p1 <= mul_ln135_fu_395_p10(8 - 1 downto 0);
    mul_ln135_fu_395_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_yuv_channels_ch3_q0),15));
    mul_ln135_fu_395_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln135_fu_395_p0) * unsigned(mul_ln135_fu_395_p1), 15));
    out_channels_ch1_address0 <= grp_yuv2rgb_fu_270_out_channels_ch1_address0;
    out_channels_ch1_ce0 <= grp_yuv2rgb_fu_270_out_channels_ch1_ce0;
    out_channels_ch1_d0 <= grp_yuv2rgb_fu_270_out_channels_ch1_d0;
    out_channels_ch1_we0 <= grp_yuv2rgb_fu_270_out_channels_ch1_we0;
    out_channels_ch2_address0 <= grp_yuv2rgb_fu_270_out_channels_ch2_address0;
    out_channels_ch2_ce0 <= grp_yuv2rgb_fu_270_out_channels_ch2_ce0;
    out_channels_ch2_d0 <= grp_yuv2rgb_fu_270_out_channels_ch2_d0;
    out_channels_ch2_we0 <= grp_yuv2rgb_fu_270_out_channels_ch2_we0;
    out_channels_ch3_address0 <= grp_yuv2rgb_fu_270_out_channels_ch3_address0;
    out_channels_ch3_ce0 <= grp_yuv2rgb_fu_270_out_channels_ch3_ce0;
    out_channels_ch3_d0 <= grp_yuv2rgb_fu_270_out_channels_ch3_d0;
    out_channels_ch3_we0 <= grp_yuv2rgb_fu_270_out_channels_ch3_we0;
    out_height <= grp_yuv2rgb_fu_270_ap_return_1;

    out_height_ap_vld_assign_proc : process(grp_yuv2rgb_fu_270_ap_done, ap_CS_fsm_state10)
    begin
        if (((grp_yuv2rgb_fu_270_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            out_height_ap_vld <= ap_const_logic_1;
        else 
            out_height_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_width <= grp_yuv2rgb_fu_270_ap_return_0;

    out_width_ap_vld_assign_proc : process(grp_yuv2rgb_fu_270_ap_done, ap_CS_fsm_state10)
    begin
        if (((grp_yuv2rgb_fu_270_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            out_width_ap_vld <= ap_const_logic_1;
        else 
            out_width_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_address0_assign_proc : process(zext_ln130_1_reg_498, ap_CS_fsm_state8, grp_yuv2rgb_fu_270_in_channels_ch1_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch1_address0 <= zext_ln130_1_reg_498(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_scale_channels_ch1_address0 <= grp_yuv2rgb_fu_270_in_channels_ch1_address0;
        else 
            p_scale_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch1_ce0_assign_proc : process(ap_CS_fsm_state8, grp_yuv2rgb_fu_270_in_channels_ch1_ce0, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            p_scale_channels_ch1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_scale_channels_ch1_ce0 <= grp_yuv2rgb_fu_270_in_channels_ch1_ce0;
        else 
            p_scale_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_we0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch1_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_address0_assign_proc : process(zext_ln130_1_reg_498, ap_CS_fsm_state8, grp_yuv2rgb_fu_270_in_channels_ch2_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch2_address0 <= zext_ln130_1_reg_498(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_scale_channels_ch2_address0 <= grp_yuv2rgb_fu_270_in_channels_ch2_address0;
        else 
            p_scale_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch2_ce0_assign_proc : process(ap_CS_fsm_state8, grp_yuv2rgb_fu_270_in_channels_ch2_ce0, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            p_scale_channels_ch2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_scale_channels_ch2_ce0 <= grp_yuv2rgb_fu_270_in_channels_ch2_ce0;
        else 
            p_scale_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_we0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch2_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_address0_assign_proc : process(zext_ln130_1_reg_498, ap_CS_fsm_state8, grp_yuv2rgb_fu_270_in_channels_ch3_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch3_address0 <= zext_ln130_1_reg_498(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_scale_channels_ch3_address0 <= grp_yuv2rgb_fu_270_in_channels_ch3_address0;
        else 
            p_scale_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch3_ce0_assign_proc : process(ap_CS_fsm_state8, grp_yuv2rgb_fu_270_in_channels_ch3_ce0, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            p_scale_channels_ch3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            p_scale_channels_ch3_ce0 <= grp_yuv2rgb_fu_270_in_channels_ch3_ce0;
        else 
            p_scale_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_we0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch3_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch1_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, zext_ln130_1_fu_366_p1, grp_rgb2yuv_fu_250_out_channels_ch1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch1_address0 <= zext_ln130_1_fu_366_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch1_address0 <= grp_rgb2yuv_fu_250_out_channels_ch1_address0;
        else 
            p_yuv_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch1_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, grp_rgb2yuv_fu_250_out_channels_ch1_ce0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch1_ce0 <= grp_rgb2yuv_fu_250_out_channels_ch1_ce0;
        else 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch1_we0_assign_proc : process(ap_CS_fsm_state2, grp_rgb2yuv_fu_250_out_channels_ch1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch1_we0 <= grp_rgb2yuv_fu_250_out_channels_ch1_we0;
        else 
            p_yuv_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, zext_ln130_1_fu_366_p1, grp_rgb2yuv_fu_250_out_channels_ch2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch2_address0 <= zext_ln130_1_fu_366_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch2_address0 <= grp_rgb2yuv_fu_250_out_channels_ch2_address0;
        else 
            p_yuv_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch2_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, grp_rgb2yuv_fu_250_out_channels_ch2_ce0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch2_ce0 <= grp_rgb2yuv_fu_250_out_channels_ch2_ce0;
        else 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_we0_assign_proc : process(ap_CS_fsm_state2, grp_rgb2yuv_fu_250_out_channels_ch2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch2_we0 <= grp_rgb2yuv_fu_250_out_channels_ch2_we0;
        else 
            p_yuv_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, zext_ln130_1_fu_366_p1, grp_rgb2yuv_fu_250_out_channels_ch3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch3_address0 <= zext_ln130_1_fu_366_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch3_address0 <= grp_rgb2yuv_fu_250_out_channels_ch3_address0;
        else 
            p_yuv_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch3_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state7, grp_rgb2yuv_fu_250_out_channels_ch3_ce0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch3_ce0 <= grp_rgb2yuv_fu_250_out_channels_ch3_ce0;
        else 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_we0_assign_proc : process(ap_CS_fsm_state2, grp_rgb2yuv_fu_250_out_channels_ch3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch3_we0 <= grp_rgb2yuv_fu_250_out_channels_ch3_we0;
        else 
            p_yuv_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln130_1_fu_328_p1 <= x_0_i_reg_228(15 - 1 downto 0);
    trunc_ln130_fu_316_p1 <= x_0_i_reg_228(13 - 1 downto 0);
    x_fu_310_p2 <= std_logic_vector(unsigned(x_0_i_reg_228) + unsigned(ap_const_lv16_1));
    y_fu_351_p2 <= std_logic_vector(unsigned(y_0_i_reg_239) + unsigned(ap_const_lv16_1));
    zext_ln125_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(V_scale),15));
    zext_ln130_1_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln130_1_fu_361_p2),64));
    zext_ln130_2_cast_fu_332_p3 <= (trunc_ln130_1_fu_328_p1 & ap_const_lv8_0);
    zext_ln130_cast_fu_320_p3 <= (trunc_ln130_fu_316_p1 & ap_const_lv10_0);
    zext_ln130_fu_357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_0_i_reg_239),23));
    zext_ln134_fu_293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Y_scale),15));
    zext_ln135_fu_297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(U_scale),15));
end behav;
