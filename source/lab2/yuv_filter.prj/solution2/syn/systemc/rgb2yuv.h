// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rgb2yuv_HH_
#define _rgb2yuv_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "yuv_filter_mul_mubkb.h"
#include "yuv_filter_mac_mucud.h"
#include "yuv_filter_mac_mudEe.h"
#include "yuv_filter_mac_mueOg.h"

namespace ap_rtl {

struct rgb2yuv : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<22> > in_channels_ch1_address0;
    sc_out< sc_logic > in_channels_ch1_ce0;
    sc_in< sc_lv<8> > in_channels_ch1_q0;
    sc_out< sc_lv<22> > in_channels_ch2_address0;
    sc_out< sc_logic > in_channels_ch2_ce0;
    sc_in< sc_lv<8> > in_channels_ch2_q0;
    sc_out< sc_lv<22> > in_channels_ch3_address0;
    sc_out< sc_logic > in_channels_ch3_ce0;
    sc_in< sc_lv<8> > in_channels_ch3_q0;
    sc_in< sc_lv<16> > in_width_read;
    sc_in< sc_lv<16> > in_height_read;
    sc_out< sc_lv<22> > out_channels_ch1_address0;
    sc_out< sc_logic > out_channels_ch1_ce0;
    sc_out< sc_logic > out_channels_ch1_we0;
    sc_out< sc_lv<8> > out_channels_ch1_d0;
    sc_out< sc_lv<22> > out_channels_ch2_address0;
    sc_out< sc_logic > out_channels_ch2_ce0;
    sc_out< sc_logic > out_channels_ch2_we0;
    sc_out< sc_lv<8> > out_channels_ch2_d0;
    sc_out< sc_lv<22> > out_channels_ch3_address0;
    sc_out< sc_logic > out_channels_ch3_ce0;
    sc_out< sc_logic > out_channels_ch3_we0;
    sc_out< sc_lv<8> > out_channels_ch3_d0;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;


    // Module declarations
    rgb2yuv(sc_module_name name);
    SC_HAS_PROCESS(rgb2yuv);

    ~rgb2yuv();

    sc_trace_file* mVcdFile;

    yuv_filter_mul_mubkb<1,1,16,16,32>* yuv_filter_mul_mubkb_U1;
    yuv_filter_mac_mucud<1,1,6,8,9,13>* yuv_filter_mac_mucud_U2;
    yuv_filter_mac_mudEe<1,1,7,8,16,16>* yuv_filter_mac_mudEe_U3;
    yuv_filter_mac_mueOg<1,1,8,8,16,16>* yuv_filter_mac_mueOg_U4;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > indvar_flatten_reg_196;
    sc_signal< sc_lv<16> > x_0_reg_207;
    sc_signal< sc_lv<16> > y_0_reg_218;
    sc_signal< sc_lv<32> > mul_ln30_fu_566_p2;
    sc_signal< sc_lv<32> > mul_ln30_reg_608;
    sc_signal< sc_lv<1> > icmp_ln45_fu_237_p2;
    sc_signal< sc_lv<1> > icmp_ln45_reg_613;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln45_reg_613_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln45_reg_613_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln45_reg_613_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln45_reg_613_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln45_reg_613_pp0_iter5_reg;
    sc_signal< sc_lv<32> > add_ln45_fu_242_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<16> > select_ln54_1_fu_267_p3;
    sc_signal< sc_lv<16> > select_ln54_1_reg_622;
    sc_signal< sc_lv<23> > add_ln54_1_fu_309_p2;
    sc_signal< sc_lv<23> > add_ln54_1_reg_627;
    sc_signal< sc_lv<16> > y_fu_315_p2;
    sc_signal< sc_lv<64> > zext_ln54_1_fu_321_p1;
    sc_signal< sc_lv<64> > zext_ln54_1_reg_637;
    sc_signal< sc_lv<64> > zext_ln54_1_reg_637_pp0_iter2_reg;
    sc_signal< sc_lv<64> > zext_ln54_1_reg_637_pp0_iter3_reg;
    sc_signal< sc_lv<64> > zext_ln54_1_reg_637_pp0_iter4_reg;
    sc_signal< sc_lv<64> > zext_ln54_1_reg_637_pp0_iter5_reg;
    sc_signal< sc_lv<8> > R_reg_659;
    sc_signal< sc_lv<8> > G_reg_666;
    sc_signal< sc_lv<8> > B_reg_673;
    sc_signal< sc_lv<16> > mul_ln59_fu_331_p2;
    sc_signal< sc_lv<16> > mul_ln59_reg_681;
    sc_signal< sc_lv<8> > trunc_ln_reg_686;
    sc_signal< sc_lv<16> > sub_ln58_fu_459_p2;
    sc_signal< sc_lv<16> > sub_ln58_reg_691;
    sc_signal< sc_lv<16> > grp_fu_581_p3;
    sc_signal< sc_lv<16> > add_ln58_reg_696;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<8> > trunc_ln6_reg_701;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_lv<16> > ap_phi_mux_x_0_phi_fu_211_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln48_fu_254_p2;
    sc_signal< sc_lv<16> > x_fu_248_p2;
    sc_signal< sc_lv<13> > trunc_ln54_fu_275_p1;
    sc_signal< sc_lv<15> > trunc_ln54_1_fu_287_p1;
    sc_signal< sc_lv<23> > zext_ln54_cast_fu_279_p3;
    sc_signal< sc_lv<23> > zext_ln54_2_cast_fu_291_p3;
    sc_signal< sc_lv<16> > select_ln54_fu_259_p3;
    sc_signal< sc_lv<23> > zext_ln54_fu_305_p1;
    sc_signal< sc_lv<23> > add_ln54_fu_299_p2;
    sc_signal< sc_lv<8> > mul_ln59_fu_331_p1;
    sc_signal< sc_lv<14> > shl_ln_fu_340_p3;
    sc_signal< sc_lv<9> > shl_ln57_1_fu_351_p3;
    sc_signal< sc_lv<15> > shl_ln57_2_fu_368_p3;
    sc_signal< sc_lv<15> > zext_ln57_3_fu_358_p1;
    sc_signal< sc_lv<15> > zext_ln57_2_fu_347_p1;
    sc_signal< sc_lv<15> > add_ln57_fu_382_p2;
    sc_signal< sc_lv<16> > zext_ln57_8_fu_388_p1;
    sc_signal< sc_lv<16> > zext_ln57_6_fu_375_p1;
    sc_signal< sc_lv<9> > zext_ln57_5_fu_365_p1;
    sc_signal< sc_lv<9> > add_ln57_3_fu_398_p2;
    sc_signal< sc_lv<13> > grp_fu_572_p3;
    sc_signal< sc_lv<16> > zext_ln57_10_fu_408_p1;
    sc_signal< sc_lv<16> > add_ln57_1_fu_392_p2;
    sc_signal< sc_lv<16> > add_ln57_2_fu_411_p2;
    sc_signal< sc_lv<8> > mul_ln58_1_fu_427_p1;
    sc_signal< sc_lv<16> > zext_ln57_4_fu_362_p1;
    sc_signal< sc_lv<15> > shl_ln1_fu_433_p3;
    sc_signal< sc_lv<12> > shl_ln58_1_fu_444_p3;
    sc_signal< sc_lv<16> > zext_ln58_fu_440_p1;
    sc_signal< sc_lv<16> > zext_ln58_2_fu_455_p1;
    sc_signal< sc_lv<13> > zext_ln58_1_fu_451_p1;
    sc_signal< sc_lv<13> > sub_ln59_fu_465_p2;
    sc_signal< sc_lv<9> > shl_ln2_fu_475_p3;
    sc_signal< sc_lv<14> > sext_ln59_fu_471_p1;
    sc_signal< sc_lv<14> > zext_ln59_fu_482_p1;
    sc_signal< sc_lv<14> > sub_ln59_1_fu_486_p2;
    sc_signal< sc_lv<14> > add_ln59_1_fu_492_p2;
    sc_signal< sc_lv<16> > sext_ln59_1_fu_498_p1;
    sc_signal< sc_lv<16> > grp_fu_589_p3;
    sc_signal< sc_lv<16> > add_ln59_2_fu_502_p2;
    sc_signal< sc_lv<16> > add_ln58_1_fu_523_p2;
    sc_signal< sc_lv<16> > add_ln58_2_fu_528_p2;
    sc_signal< sc_lv<8> > trunc_ln5_fu_533_p4;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<16> > mul_ln30_fu_566_p0;
    sc_signal< sc_lv<16> > mul_ln30_fu_566_p1;
    sc_signal< sc_lv<6> > grp_fu_572_p0;
    sc_signal< sc_lv<8> > grp_fu_572_p1;
    sc_signal< sc_lv<9> > grp_fu_572_p2;
    sc_signal< sc_lv<7> > grp_fu_581_p0;
    sc_signal< sc_lv<8> > grp_fu_581_p1;
    sc_signal< sc_lv<16> > grp_fu_581_p2;
    sc_signal< sc_lv<8> > grp_fu_589_p0;
    sc_signal< sc_lv<8> > grp_fu_589_p1;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<13> > grp_fu_572_p10;
    sc_signal< sc_lv<13> > grp_fu_572_p20;
    sc_signal< sc_lv<15> > grp_fu_581_p10;
    sc_signal< sc_lv<32> > mul_ln30_fu_566_p00;
    sc_signal< sc_lv<32> > mul_ln30_fu_566_p10;
    sc_signal< sc_lv<16> > mul_ln59_fu_331_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state10;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_7A;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_80;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_FFB6;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<14> ap_const_lv14_80;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<16> ap_const_lv16_80;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<13> ap_const_lv13_19;
    static const sc_lv<15> ap_const_lv15_7FDA;
    static const sc_lv<16> ap_const_lv16_FFA2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln45_fu_242_p2();
    void thread_add_ln54_1_fu_309_p2();
    void thread_add_ln54_fu_299_p2();
    void thread_add_ln57_1_fu_392_p2();
    void thread_add_ln57_2_fu_411_p2();
    void thread_add_ln57_3_fu_398_p2();
    void thread_add_ln57_fu_382_p2();
    void thread_add_ln58_1_fu_523_p2();
    void thread_add_ln58_2_fu_528_p2();
    void thread_add_ln59_1_fu_492_p2();
    void thread_add_ln59_2_fu_502_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_x_0_phi_fu_211_p4();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_grp_fu_572_p0();
    void thread_grp_fu_572_p1();
    void thread_grp_fu_572_p10();
    void thread_grp_fu_572_p2();
    void thread_grp_fu_572_p20();
    void thread_grp_fu_581_p0();
    void thread_grp_fu_581_p1();
    void thread_grp_fu_581_p10();
    void thread_grp_fu_581_p2();
    void thread_grp_fu_589_p0();
    void thread_grp_fu_589_p1();
    void thread_icmp_ln45_fu_237_p2();
    void thread_icmp_ln48_fu_254_p2();
    void thread_in_channels_ch1_address0();
    void thread_in_channels_ch1_ce0();
    void thread_in_channels_ch2_address0();
    void thread_in_channels_ch2_ce0();
    void thread_in_channels_ch3_address0();
    void thread_in_channels_ch3_ce0();
    void thread_mul_ln30_fu_566_p0();
    void thread_mul_ln30_fu_566_p00();
    void thread_mul_ln30_fu_566_p1();
    void thread_mul_ln30_fu_566_p10();
    void thread_mul_ln58_1_fu_427_p1();
    void thread_mul_ln59_fu_331_p1();
    void thread_mul_ln59_fu_331_p10();
    void thread_mul_ln59_fu_331_p2();
    void thread_out_channels_ch1_address0();
    void thread_out_channels_ch1_ce0();
    void thread_out_channels_ch1_d0();
    void thread_out_channels_ch1_we0();
    void thread_out_channels_ch2_address0();
    void thread_out_channels_ch2_ce0();
    void thread_out_channels_ch2_d0();
    void thread_out_channels_ch2_we0();
    void thread_out_channels_ch3_address0();
    void thread_out_channels_ch3_ce0();
    void thread_out_channels_ch3_d0();
    void thread_out_channels_ch3_we0();
    void thread_select_ln54_1_fu_267_p3();
    void thread_select_ln54_fu_259_p3();
    void thread_sext_ln59_1_fu_498_p1();
    void thread_sext_ln59_fu_471_p1();
    void thread_shl_ln1_fu_433_p3();
    void thread_shl_ln2_fu_475_p3();
    void thread_shl_ln57_1_fu_351_p3();
    void thread_shl_ln57_2_fu_368_p3();
    void thread_shl_ln58_1_fu_444_p3();
    void thread_shl_ln_fu_340_p3();
    void thread_sub_ln58_fu_459_p2();
    void thread_sub_ln59_1_fu_486_p2();
    void thread_sub_ln59_fu_465_p2();
    void thread_trunc_ln54_1_fu_287_p1();
    void thread_trunc_ln54_fu_275_p1();
    void thread_trunc_ln5_fu_533_p4();
    void thread_x_fu_248_p2();
    void thread_y_fu_315_p2();
    void thread_zext_ln54_1_fu_321_p1();
    void thread_zext_ln54_2_cast_fu_291_p3();
    void thread_zext_ln54_cast_fu_279_p3();
    void thread_zext_ln54_fu_305_p1();
    void thread_zext_ln57_10_fu_408_p1();
    void thread_zext_ln57_2_fu_347_p1();
    void thread_zext_ln57_3_fu_358_p1();
    void thread_zext_ln57_4_fu_362_p1();
    void thread_zext_ln57_5_fu_365_p1();
    void thread_zext_ln57_6_fu_375_p1();
    void thread_zext_ln57_8_fu_388_p1();
    void thread_zext_ln58_1_fu_451_p1();
    void thread_zext_ln58_2_fu_455_p1();
    void thread_zext_ln58_fu_440_p1();
    void thread_zext_ln59_fu_482_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
