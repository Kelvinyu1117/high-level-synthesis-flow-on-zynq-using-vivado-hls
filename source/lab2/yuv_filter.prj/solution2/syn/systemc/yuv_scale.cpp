// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "yuv_scale.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic yuv_scale::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic yuv_scale::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> yuv_scale::ap_ST_fsm_state1 = "1";
const sc_lv<3> yuv_scale::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> yuv_scale::ap_ST_fsm_state9 = "100";
const bool yuv_scale::ap_const_boolean_1 = true;
const sc_lv<32> yuv_scale::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> yuv_scale::ap_const_lv32_1 = "1";
const bool yuv_scale::ap_const_boolean_0 = false;
const sc_lv<1> yuv_scale::ap_const_lv1_0 = "0";
const sc_lv<1> yuv_scale::ap_const_lv1_1 = "1";
const sc_lv<16> yuv_scale::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> yuv_scale::ap_const_lv16_1 = "1";
const sc_lv<10> yuv_scale::ap_const_lv10_0 = "0000000000";
const sc_lv<8> yuv_scale::ap_const_lv8_0 = "00000000";
const sc_lv<32> yuv_scale::ap_const_lv32_7 = "111";
const sc_lv<32> yuv_scale::ap_const_lv32_E = "1110";
const sc_lv<32> yuv_scale::ap_const_lv32_2 = "10";

yuv_scale::yuv_scale(sc_module_name name) : sc_module(name), mVcdFile(0) {
    yuv_filter_mul_mubkb_U17 = new yuv_filter_mul_mubkb<1,1,16,16,32>("yuv_filter_mul_mubkb_U17");
    yuv_filter_mul_mubkb_U17->din0(mul_ln111_fu_394_p0);
    yuv_filter_mul_mubkb_U17->din1(mul_ln111_fu_394_p1);
    yuv_filter_mul_mubkb_U17->dout(mul_ln111_fu_394_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln129_fu_242_p2);
    sensitive << ( indvar_flatten_reg_184 );

    SC_METHOD(thread_add_ln134_1_fu_309_p2);
    sensitive << ( zext_ln134_fu_305_p1 );
    sensitive << ( add_ln134_fu_299_p2 );

    SC_METHOD(thread_add_ln134_fu_299_p2);
    sensitive << ( zext_ln134_cast_fu_279_p3 );
    sensitive << ( zext_ln134_2_cast_fu_291_p3 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln129_fu_237_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_phi_mux_x_0_phi_fu_199_p4);
    sensitive << ( x_0_reg_195 );
    sensitive << ( icmp_ln129_reg_431 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln134_1_reg_440 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( in_width_read );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( in_height_read );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_icmp_ln129_fu_237_p2);
    sensitive << ( indvar_flatten_reg_184 );
    sensitive << ( mul_ln111_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln132_fu_254_p2);
    sensitive << ( in_height_read );
    sensitive << ( y_0_reg_206 );
    sensitive << ( icmp_ln129_fu_237_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_in_channels_ch1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln134_1_fu_321_p1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_channels_ch1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_in_channels_ch2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln134_1_fu_321_p1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_channels_ch2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_in_channels_ch3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln134_1_fu_321_p1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_channels_ch3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_mul_ln111_fu_394_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mul_ln111_fu_394_p00 );

    SC_METHOD(thread_mul_ln111_fu_394_p00);
    sensitive << ( in_height_read );

    SC_METHOD(thread_mul_ln111_fu_394_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mul_ln111_fu_394_p10 );

    SC_METHOD(thread_mul_ln111_fu_394_p10);
    sensitive << ( in_width_read );

    SC_METHOD(thread_mul_ln137_fu_331_p0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln137_fu_331_p00 );

    SC_METHOD(thread_mul_ln137_fu_331_p00);
    sensitive << ( in_channels_ch1_q0 );

    SC_METHOD(thread_mul_ln137_fu_331_p1);
    sensitive << ( zext_ln138_reg_411 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mul_ln137_fu_331_p2);
    sensitive << ( mul_ln137_fu_331_p0 );
    sensitive << ( mul_ln137_fu_331_p1 );

    SC_METHOD(thread_mul_ln138_fu_340_p0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln138_fu_340_p00 );

    SC_METHOD(thread_mul_ln138_fu_340_p00);
    sensitive << ( in_channels_ch2_q0 );

    SC_METHOD(thread_mul_ln138_fu_340_p1);
    sensitive << ( zext_ln139_reg_416 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mul_ln138_fu_340_p2);
    sensitive << ( mul_ln138_fu_340_p0 );
    sensitive << ( mul_ln138_fu_340_p1 );

    SC_METHOD(thread_mul_ln139_fu_349_p0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln139_fu_349_p00 );

    SC_METHOD(thread_mul_ln139_fu_349_p00);
    sensitive << ( in_channels_ch3_q0 );

    SC_METHOD(thread_mul_ln139_fu_349_p1);
    sensitive << ( zext_ln129_reg_421 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mul_ln139_fu_349_p2);
    sensitive << ( mul_ln139_fu_349_p0 );
    sensitive << ( mul_ln139_fu_349_p1 );

    SC_METHOD(thread_out_channels_ch1_address0);
    sensitive << ( zext_ln134_1_reg_455_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_out_channels_ch1_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_out_channels_ch1_d0);
    sensitive << ( trunc_ln_reg_477 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_out_channels_ch1_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln129_reg_431_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_out_channels_ch2_address0);
    sensitive << ( zext_ln134_1_reg_455_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_out_channels_ch2_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_out_channels_ch2_d0);
    sensitive << ( trunc_ln1_reg_482 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_out_channels_ch2_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln129_reg_431_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_out_channels_ch3_address0);
    sensitive << ( zext_ln134_1_reg_455_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_out_channels_ch3_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_out_channels_ch3_d0);
    sensitive << ( trunc_ln2_reg_487 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_out_channels_ch3_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln129_reg_431_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_select_ln134_1_fu_267_p3);
    sensitive << ( ap_phi_mux_x_0_phi_fu_199_p4 );
    sensitive << ( icmp_ln132_fu_254_p2 );
    sensitive << ( x_fu_248_p2 );

    SC_METHOD(thread_select_ln134_fu_259_p3);
    sensitive << ( y_0_reg_206 );
    sensitive << ( icmp_ln132_fu_254_p2 );

    SC_METHOD(thread_trunc_ln134_1_fu_287_p1);
    sensitive << ( select_ln134_1_fu_267_p3 );

    SC_METHOD(thread_trunc_ln134_fu_275_p1);
    sensitive << ( select_ln134_1_fu_267_p3 );

    SC_METHOD(thread_x_fu_248_p2);
    sensitive << ( ap_phi_mux_x_0_phi_fu_199_p4 );

    SC_METHOD(thread_y_fu_315_p2);
    sensitive << ( select_ln134_fu_259_p3 );

    SC_METHOD(thread_zext_ln129_fu_225_p1);
    sensitive << ( V_scale );

    SC_METHOD(thread_zext_ln134_1_fu_321_p1);
    sensitive << ( add_ln134_1_reg_445 );

    SC_METHOD(thread_zext_ln134_2_cast_fu_291_p3);
    sensitive << ( trunc_ln134_1_fu_287_p1 );

    SC_METHOD(thread_zext_ln134_cast_fu_279_p3);
    sensitive << ( trunc_ln134_fu_275_p1 );

    SC_METHOD(thread_zext_ln134_fu_305_p1);
    sensitive << ( select_ln134_fu_259_p3 );

    SC_METHOD(thread_zext_ln138_fu_217_p1);
    sensitive << ( Y_scale );

    SC_METHOD(thread_zext_ln139_fu_221_p1);
    sensitive << ( U_scale );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln129_fu_237_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "yuv_scale_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_channels_ch1_address0, "(port)in_channels_ch1_address0");
    sc_trace(mVcdFile, in_channels_ch1_ce0, "(port)in_channels_ch1_ce0");
    sc_trace(mVcdFile, in_channels_ch1_q0, "(port)in_channels_ch1_q0");
    sc_trace(mVcdFile, in_channels_ch2_address0, "(port)in_channels_ch2_address0");
    sc_trace(mVcdFile, in_channels_ch2_ce0, "(port)in_channels_ch2_ce0");
    sc_trace(mVcdFile, in_channels_ch2_q0, "(port)in_channels_ch2_q0");
    sc_trace(mVcdFile, in_channels_ch3_address0, "(port)in_channels_ch3_address0");
    sc_trace(mVcdFile, in_channels_ch3_ce0, "(port)in_channels_ch3_ce0");
    sc_trace(mVcdFile, in_channels_ch3_q0, "(port)in_channels_ch3_q0");
    sc_trace(mVcdFile, in_width_read, "(port)in_width_read");
    sc_trace(mVcdFile, in_height_read, "(port)in_height_read");
    sc_trace(mVcdFile, out_channels_ch1_address0, "(port)out_channels_ch1_address0");
    sc_trace(mVcdFile, out_channels_ch1_ce0, "(port)out_channels_ch1_ce0");
    sc_trace(mVcdFile, out_channels_ch1_we0, "(port)out_channels_ch1_we0");
    sc_trace(mVcdFile, out_channels_ch1_d0, "(port)out_channels_ch1_d0");
    sc_trace(mVcdFile, out_channels_ch2_address0, "(port)out_channels_ch2_address0");
    sc_trace(mVcdFile, out_channels_ch2_ce0, "(port)out_channels_ch2_ce0");
    sc_trace(mVcdFile, out_channels_ch2_we0, "(port)out_channels_ch2_we0");
    sc_trace(mVcdFile, out_channels_ch2_d0, "(port)out_channels_ch2_d0");
    sc_trace(mVcdFile, out_channels_ch3_address0, "(port)out_channels_ch3_address0");
    sc_trace(mVcdFile, out_channels_ch3_ce0, "(port)out_channels_ch3_ce0");
    sc_trace(mVcdFile, out_channels_ch3_we0, "(port)out_channels_ch3_we0");
    sc_trace(mVcdFile, out_channels_ch3_d0, "(port)out_channels_ch3_d0");
    sc_trace(mVcdFile, Y_scale, "(port)Y_scale");
    sc_trace(mVcdFile, U_scale, "(port)U_scale");
    sc_trace(mVcdFile, V_scale, "(port)V_scale");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_184, "indvar_flatten_reg_184");
    sc_trace(mVcdFile, x_0_reg_195, "x_0_reg_195");
    sc_trace(mVcdFile, y_0_reg_206, "y_0_reg_206");
    sc_trace(mVcdFile, zext_ln138_fu_217_p1, "zext_ln138_fu_217_p1");
    sc_trace(mVcdFile, zext_ln138_reg_411, "zext_ln138_reg_411");
    sc_trace(mVcdFile, zext_ln139_fu_221_p1, "zext_ln139_fu_221_p1");
    sc_trace(mVcdFile, zext_ln139_reg_416, "zext_ln139_reg_416");
    sc_trace(mVcdFile, zext_ln129_fu_225_p1, "zext_ln129_fu_225_p1");
    sc_trace(mVcdFile, zext_ln129_reg_421, "zext_ln129_reg_421");
    sc_trace(mVcdFile, mul_ln111_fu_394_p2, "mul_ln111_fu_394_p2");
    sc_trace(mVcdFile, mul_ln111_reg_426, "mul_ln111_reg_426");
    sc_trace(mVcdFile, icmp_ln129_fu_237_p2, "icmp_ln129_fu_237_p2");
    sc_trace(mVcdFile, icmp_ln129_reg_431, "icmp_ln129_reg_431");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln129_reg_431_pp0_iter1_reg, "icmp_ln129_reg_431_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln129_reg_431_pp0_iter2_reg, "icmp_ln129_reg_431_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln129_reg_431_pp0_iter3_reg, "icmp_ln129_reg_431_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln129_reg_431_pp0_iter4_reg, "icmp_ln129_reg_431_pp0_iter4_reg");
    sc_trace(mVcdFile, add_ln129_fu_242_p2, "add_ln129_fu_242_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln134_1_fu_267_p3, "select_ln134_1_fu_267_p3");
    sc_trace(mVcdFile, select_ln134_1_reg_440, "select_ln134_1_reg_440");
    sc_trace(mVcdFile, add_ln134_1_fu_309_p2, "add_ln134_1_fu_309_p2");
    sc_trace(mVcdFile, add_ln134_1_reg_445, "add_ln134_1_reg_445");
    sc_trace(mVcdFile, y_fu_315_p2, "y_fu_315_p2");
    sc_trace(mVcdFile, zext_ln134_1_fu_321_p1, "zext_ln134_1_fu_321_p1");
    sc_trace(mVcdFile, zext_ln134_1_reg_455, "zext_ln134_1_reg_455");
    sc_trace(mVcdFile, zext_ln134_1_reg_455_pp0_iter2_reg, "zext_ln134_1_reg_455_pp0_iter2_reg");
    sc_trace(mVcdFile, zext_ln134_1_reg_455_pp0_iter3_reg, "zext_ln134_1_reg_455_pp0_iter3_reg");
    sc_trace(mVcdFile, zext_ln134_1_reg_455_pp0_iter4_reg, "zext_ln134_1_reg_455_pp0_iter4_reg");
    sc_trace(mVcdFile, trunc_ln_reg_477, "trunc_ln_reg_477");
    sc_trace(mVcdFile, trunc_ln1_reg_482, "trunc_ln1_reg_482");
    sc_trace(mVcdFile, trunc_ln2_reg_487, "trunc_ln2_reg_487");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_phi_mux_x_0_phi_fu_199_p4, "ap_phi_mux_x_0_phi_fu_199_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln132_fu_254_p2, "icmp_ln132_fu_254_p2");
    sc_trace(mVcdFile, x_fu_248_p2, "x_fu_248_p2");
    sc_trace(mVcdFile, trunc_ln134_fu_275_p1, "trunc_ln134_fu_275_p1");
    sc_trace(mVcdFile, trunc_ln134_1_fu_287_p1, "trunc_ln134_1_fu_287_p1");
    sc_trace(mVcdFile, zext_ln134_cast_fu_279_p3, "zext_ln134_cast_fu_279_p3");
    sc_trace(mVcdFile, zext_ln134_2_cast_fu_291_p3, "zext_ln134_2_cast_fu_291_p3");
    sc_trace(mVcdFile, select_ln134_fu_259_p3, "select_ln134_fu_259_p3");
    sc_trace(mVcdFile, zext_ln134_fu_305_p1, "zext_ln134_fu_305_p1");
    sc_trace(mVcdFile, add_ln134_fu_299_p2, "add_ln134_fu_299_p2");
    sc_trace(mVcdFile, mul_ln137_fu_331_p0, "mul_ln137_fu_331_p0");
    sc_trace(mVcdFile, mul_ln137_fu_331_p1, "mul_ln137_fu_331_p1");
    sc_trace(mVcdFile, mul_ln138_fu_340_p0, "mul_ln138_fu_340_p0");
    sc_trace(mVcdFile, mul_ln138_fu_340_p1, "mul_ln138_fu_340_p1");
    sc_trace(mVcdFile, mul_ln139_fu_349_p0, "mul_ln139_fu_349_p0");
    sc_trace(mVcdFile, mul_ln139_fu_349_p1, "mul_ln139_fu_349_p1");
    sc_trace(mVcdFile, mul_ln137_fu_331_p2, "mul_ln137_fu_331_p2");
    sc_trace(mVcdFile, mul_ln138_fu_340_p2, "mul_ln138_fu_340_p2");
    sc_trace(mVcdFile, mul_ln139_fu_349_p2, "mul_ln139_fu_349_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, mul_ln111_fu_394_p0, "mul_ln111_fu_394_p0");
    sc_trace(mVcdFile, mul_ln111_fu_394_p1, "mul_ln111_fu_394_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, mul_ln111_fu_394_p00, "mul_ln111_fu_394_p00");
    sc_trace(mVcdFile, mul_ln111_fu_394_p10, "mul_ln111_fu_394_p10");
    sc_trace(mVcdFile, mul_ln137_fu_331_p00, "mul_ln137_fu_331_p00");
    sc_trace(mVcdFile, mul_ln138_fu_340_p00, "mul_ln138_fu_340_p00");
    sc_trace(mVcdFile, mul_ln139_fu_349_p00, "mul_ln139_fu_349_p00");
#endif

    }
}

yuv_scale::~yuv_scale() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete yuv_filter_mul_mubkb_U17;
}

void yuv_scale::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter6 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln129_fu_237_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_184 = add_ln129_fu_242_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_184 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln129_reg_431.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        x_0_reg_195 = select_ln134_1_reg_440.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_0_reg_195 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln129_fu_237_p2.read(), ap_const_lv1_0))) {
        y_0_reg_206 = y_fu_315_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        y_0_reg_206 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln129_fu_237_p2.read(), ap_const_lv1_0))) {
        add_ln134_1_reg_445 = add_ln134_1_fu_309_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln129_reg_431 = icmp_ln129_fu_237_p2.read();
        icmp_ln129_reg_431_pp0_iter1_reg = icmp_ln129_reg_431.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln129_reg_431_pp0_iter2_reg = icmp_ln129_reg_431_pp0_iter1_reg.read();
        icmp_ln129_reg_431_pp0_iter3_reg = icmp_ln129_reg_431_pp0_iter2_reg.read();
        icmp_ln129_reg_431_pp0_iter4_reg = icmp_ln129_reg_431_pp0_iter3_reg.read();
        zext_ln134_1_reg_455_pp0_iter2_reg = zext_ln134_1_reg_455.read();
        zext_ln134_1_reg_455_pp0_iter3_reg = zext_ln134_1_reg_455_pp0_iter2_reg.read();
        zext_ln134_1_reg_455_pp0_iter4_reg = zext_ln134_1_reg_455_pp0_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        mul_ln111_reg_426 = mul_ln111_fu_394_p2.read();
        zext_ln129_reg_421 = zext_ln129_fu_225_p1.read();
        zext_ln138_reg_411 = zext_ln138_fu_217_p1.read();
        zext_ln139_reg_416 = zext_ln139_fu_221_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln129_fu_237_p2.read(), ap_const_lv1_0))) {
        select_ln134_1_reg_440 = select_ln134_1_fu_267_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln129_reg_431_pp0_iter3_reg.read(), ap_const_lv1_0))) {
        trunc_ln1_reg_482 = mul_ln138_fu_340_p2.read().range(14, 7);
        trunc_ln2_reg_487 = mul_ln139_fu_349_p2.read().range(14, 7);
        trunc_ln_reg_477 = mul_ln137_fu_331_p2.read().range(14, 7);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln129_reg_431.read(), ap_const_lv1_0))) {
        zext_ln134_1_reg_455 = zext_ln134_1_fu_321_p1.read();
    }
}

void yuv_scale::thread_add_ln129_fu_242_p2() {
    add_ln129_fu_242_p2 = (!indvar_flatten_reg_184.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(indvar_flatten_reg_184.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void yuv_scale::thread_add_ln134_1_fu_309_p2() {
    add_ln134_1_fu_309_p2 = (!zext_ln134_fu_305_p1.read().is_01() || !add_ln134_fu_299_p2.read().is_01())? sc_lv<23>(): (sc_biguint<23>(zext_ln134_fu_305_p1.read()) + sc_biguint<23>(add_ln134_fu_299_p2.read()));
}

void yuv_scale::thread_add_ln134_fu_299_p2() {
    add_ln134_fu_299_p2 = (!zext_ln134_cast_fu_279_p3.read().is_01() || !zext_ln134_2_cast_fu_291_p3.read().is_01())? sc_lv<23>(): (sc_biguint<23>(zext_ln134_cast_fu_279_p3.read()) + sc_biguint<23>(zext_ln134_2_cast_fu_291_p3.read()));
}

void yuv_scale::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void yuv_scale::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void yuv_scale::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[2];
}

void yuv_scale::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln129_fu_237_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void yuv_scale::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_phi_mux_x_0_phi_fu_199_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln129_reg_431.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_x_0_phi_fu_199_p4 = select_ln134_1_reg_440.read();
    } else {
        ap_phi_mux_x_0_phi_fu_199_p4 = x_0_reg_195.read();
    }
}

void yuv_scale::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_return_0() {
    ap_return_0 = in_width_read.read();
}

void yuv_scale::thread_ap_return_1() {
    ap_return_1 = in_height_read.read();
}

void yuv_scale::thread_icmp_ln129_fu_237_p2() {
    icmp_ln129_fu_237_p2 = (!indvar_flatten_reg_184.read().is_01() || !mul_ln111_reg_426.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_184.read() == mul_ln111_reg_426.read());
}

void yuv_scale::thread_icmp_ln132_fu_254_p2() {
    icmp_ln132_fu_254_p2 = (!y_0_reg_206.read().is_01() || !in_height_read.read().is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_206.read() == in_height_read.read());
}

void yuv_scale::thread_in_channels_ch1_address0() {
    in_channels_ch1_address0 =  (sc_lv<22>) (zext_ln134_1_fu_321_p1.read());
}

void yuv_scale::thread_in_channels_ch1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        in_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_in_channels_ch2_address0() {
    in_channels_ch2_address0 =  (sc_lv<22>) (zext_ln134_1_fu_321_p1.read());
}

void yuv_scale::thread_in_channels_ch2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        in_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_in_channels_ch3_address0() {
    in_channels_ch3_address0 =  (sc_lv<22>) (zext_ln134_1_fu_321_p1.read());
}

void yuv_scale::thread_in_channels_ch3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        in_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_mul_ln111_fu_394_p0() {
    mul_ln111_fu_394_p0 =  (sc_lv<16>) (mul_ln111_fu_394_p00.read());
}

void yuv_scale::thread_mul_ln111_fu_394_p00() {
    mul_ln111_fu_394_p00 = esl_zext<32,16>(in_height_read.read());
}

void yuv_scale::thread_mul_ln111_fu_394_p1() {
    mul_ln111_fu_394_p1 =  (sc_lv<16>) (mul_ln111_fu_394_p10.read());
}

void yuv_scale::thread_mul_ln111_fu_394_p10() {
    mul_ln111_fu_394_p10 = esl_zext<32,16>(in_width_read.read());
}

void yuv_scale::thread_mul_ln137_fu_331_p0() {
    mul_ln137_fu_331_p0 =  (sc_lv<8>) (mul_ln137_fu_331_p00.read());
}

void yuv_scale::thread_mul_ln137_fu_331_p00() {
    mul_ln137_fu_331_p00 = esl_zext<15,8>(in_channels_ch1_q0.read());
}

void yuv_scale::thread_mul_ln137_fu_331_p1() {
    mul_ln137_fu_331_p1 =  (sc_lv<8>) (zext_ln138_reg_411.read());
}

void yuv_scale::thread_mul_ln137_fu_331_p2() {
    mul_ln137_fu_331_p2 = (!mul_ln137_fu_331_p0.read().is_01() || !mul_ln137_fu_331_p1.read().is_01())? sc_lv<15>(): sc_biguint<8>(mul_ln137_fu_331_p0.read()) * sc_biguint<8>(mul_ln137_fu_331_p1.read());
}

void yuv_scale::thread_mul_ln138_fu_340_p0() {
    mul_ln138_fu_340_p0 =  (sc_lv<8>) (mul_ln138_fu_340_p00.read());
}

void yuv_scale::thread_mul_ln138_fu_340_p00() {
    mul_ln138_fu_340_p00 = esl_zext<15,8>(in_channels_ch2_q0.read());
}

void yuv_scale::thread_mul_ln138_fu_340_p1() {
    mul_ln138_fu_340_p1 =  (sc_lv<8>) (zext_ln139_reg_416.read());
}

void yuv_scale::thread_mul_ln138_fu_340_p2() {
    mul_ln138_fu_340_p2 = (!mul_ln138_fu_340_p0.read().is_01() || !mul_ln138_fu_340_p1.read().is_01())? sc_lv<15>(): sc_biguint<8>(mul_ln138_fu_340_p0.read()) * sc_biguint<8>(mul_ln138_fu_340_p1.read());
}

void yuv_scale::thread_mul_ln139_fu_349_p0() {
    mul_ln139_fu_349_p0 =  (sc_lv<8>) (mul_ln139_fu_349_p00.read());
}

void yuv_scale::thread_mul_ln139_fu_349_p00() {
    mul_ln139_fu_349_p00 = esl_zext<15,8>(in_channels_ch3_q0.read());
}

void yuv_scale::thread_mul_ln139_fu_349_p1() {
    mul_ln139_fu_349_p1 =  (sc_lv<8>) (zext_ln129_reg_421.read());
}

void yuv_scale::thread_mul_ln139_fu_349_p2() {
    mul_ln139_fu_349_p2 = (!mul_ln139_fu_349_p0.read().is_01() || !mul_ln139_fu_349_p1.read().is_01())? sc_lv<15>(): sc_biguint<8>(mul_ln139_fu_349_p0.read()) * sc_biguint<8>(mul_ln139_fu_349_p1.read());
}

void yuv_scale::thread_out_channels_ch1_address0() {
    out_channels_ch1_address0 =  (sc_lv<22>) (zext_ln134_1_reg_455_pp0_iter4_reg.read());
}

void yuv_scale::thread_out_channels_ch1_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())))) {
        out_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch1_d0() {
    out_channels_ch1_d0 = trunc_ln_reg_477.read();
}

void yuv_scale::thread_out_channels_ch1_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln129_reg_431_pp0_iter4_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        out_channels_ch1_we0 = ap_const_logic_1;
    } else {
        out_channels_ch1_we0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch2_address0() {
    out_channels_ch2_address0 =  (sc_lv<22>) (zext_ln134_1_reg_455_pp0_iter4_reg.read());
}

void yuv_scale::thread_out_channels_ch2_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())))) {
        out_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch2_d0() {
    out_channels_ch2_d0 = trunc_ln1_reg_482.read();
}

void yuv_scale::thread_out_channels_ch2_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln129_reg_431_pp0_iter4_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        out_channels_ch2_we0 = ap_const_logic_1;
    } else {
        out_channels_ch2_we0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch3_address0() {
    out_channels_ch3_address0 =  (sc_lv<22>) (zext_ln134_1_reg_455_pp0_iter4_reg.read());
}

void yuv_scale::thread_out_channels_ch3_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read())))) {
        out_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch3_d0() {
    out_channels_ch3_d0 = trunc_ln2_reg_487.read();
}

void yuv_scale::thread_out_channels_ch3_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln129_reg_431_pp0_iter4_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        out_channels_ch3_we0 = ap_const_logic_1;
    } else {
        out_channels_ch3_we0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_select_ln134_1_fu_267_p3() {
    select_ln134_1_fu_267_p3 = (!icmp_ln132_fu_254_p2.read()[0].is_01())? sc_lv<16>(): ((icmp_ln132_fu_254_p2.read()[0].to_bool())? x_fu_248_p2.read(): ap_phi_mux_x_0_phi_fu_199_p4.read());
}

void yuv_scale::thread_select_ln134_fu_259_p3() {
    select_ln134_fu_259_p3 = (!icmp_ln132_fu_254_p2.read()[0].is_01())? sc_lv<16>(): ((icmp_ln132_fu_254_p2.read()[0].to_bool())? ap_const_lv16_0: y_0_reg_206.read());
}

void yuv_scale::thread_trunc_ln134_1_fu_287_p1() {
    trunc_ln134_1_fu_287_p1 = select_ln134_1_fu_267_p3.read().range(15-1, 0);
}

void yuv_scale::thread_trunc_ln134_fu_275_p1() {
    trunc_ln134_fu_275_p1 = select_ln134_1_fu_267_p3.read().range(13-1, 0);
}

void yuv_scale::thread_x_fu_248_p2() {
    x_fu_248_p2 = (!ap_const_lv16_1.is_01() || !ap_phi_mux_x_0_phi_fu_199_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(ap_phi_mux_x_0_phi_fu_199_p4.read()));
}

void yuv_scale::thread_y_fu_315_p2() {
    y_fu_315_p2 = (!ap_const_lv16_1.is_01() || !select_ln134_fu_259_p3.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(select_ln134_fu_259_p3.read()));
}

void yuv_scale::thread_zext_ln129_fu_225_p1() {
    zext_ln129_fu_225_p1 = esl_zext<15,8>(V_scale.read());
}

void yuv_scale::thread_zext_ln134_1_fu_321_p1() {
    zext_ln134_1_fu_321_p1 = esl_zext<64,23>(add_ln134_1_reg_445.read());
}

void yuv_scale::thread_zext_ln134_2_cast_fu_291_p3() {
    zext_ln134_2_cast_fu_291_p3 = esl_concat<15,8>(trunc_ln134_1_fu_287_p1.read(), ap_const_lv8_0);
}

void yuv_scale::thread_zext_ln134_cast_fu_279_p3() {
    zext_ln134_cast_fu_279_p3 = esl_concat<13,10>(trunc_ln134_fu_275_p1.read(), ap_const_lv10_0);
}

void yuv_scale::thread_zext_ln134_fu_305_p1() {
    zext_ln134_fu_305_p1 = esl_zext<23,16>(select_ln134_fu_259_p3.read());
}

void yuv_scale::thread_zext_ln138_fu_217_p1() {
    zext_ln138_fu_217_p1 = esl_zext<15,8>(Y_scale.read());
}

void yuv_scale::thread_zext_ln139_fu_221_p1() {
    zext_ln139_fu_221_p1 = esl_zext<15,8>(U_scale.read());
}

void yuv_scale::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln129_fu_237_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln129_fu_237_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

