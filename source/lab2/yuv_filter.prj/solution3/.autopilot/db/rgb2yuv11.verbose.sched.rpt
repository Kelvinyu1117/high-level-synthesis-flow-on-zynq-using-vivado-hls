

================================================================
== Vivado HLS Report for 'rgb2yuv11'
================================================================
* Date:           Sun Aug  2 15:34:17 2020

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        yuv_filter.prj
* Solution:       solution3
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 10.00 ns | 11.004 ns |   1.25 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+-----------+-------+---------+---------+
    |  Latency (cycles) |  Latency (absolute)  |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max    |  min  |   max   |   Type  |
    +---------+---------+----------+-----------+-------+---------+---------+
    |    40007|  2457607| 0.440 ms | 27.044 ms |  40007|  2457607|   none  |
    +---------+---------+----------+-----------+-------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+---------+---------+----------+-----------+-----------+-----------------+----------+
        |                                 |  Latency (cycles) | Iteration|  Initiation Interval  |       Trip      |          |
        |            Loop Name            |   min   |   max   |  Latency |  achieved |   target  |      Count      | Pipelined|
        +---------------------------------+---------+---------+----------+-----------+-----------+-----------------+----------+
        |- RGB2YUV_LOOP_X_RGB2YUV_LOOP_Y  |    40005|  2457605|         7|          1|          1| 40000 ~ 2457600 |    yes   |
        +---------------------------------+---------+---------+----------+-----------+-----------+-----------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 9 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 2 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.38>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i16* %out_height, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 10 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty_72 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %out_width, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 11 'specinterface' 'empty_72' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty_73 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %out_channels_ch3, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 12 'specinterface' 'empty_73' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty_74 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %out_channels_ch2, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 13 'specinterface' 'empty_74' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty_75 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %out_channels_ch1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 14 'specinterface' 'empty_75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty_76 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %Y_scale_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 15 'specinterface' 'empty_76' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%V_scale_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %V_scale)" [yuv_filter.c:12]   --->   Operation 16 'read' 'V_scale_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%U_scale_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %U_scale)" [yuv_filter.c:12]   --->   Operation 17 'read' 'U_scale_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%Y_scale_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %Y_scale)" [yuv_filter.c:12]   --->   Operation 18 'read' 'Y_scale_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i8P(i8* %Y_scale_out, i8 %Y_scale_read)" [yuv_filter.c:12]   --->   Operation 19 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty_77 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %U_scale_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 20 'specinterface' 'empty_77' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i8P(i8* %U_scale_out, i8 %U_scale_read)" [yuv_filter.c:12]   --->   Operation 21 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%empty_78 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %V_scale_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 22 'specinterface' 'empty_78' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i8P(i8* %V_scale_out, i8 %V_scale_read)" [yuv_filter.c:12]   --->   Operation 23 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%width = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %in_width)" [yuv_filter.c:39->yuv_filter.c:12]   --->   Operation 24 'read' 'width' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%height = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %in_height)" [yuv_filter.c:40->yuv_filter.c:12]   --->   Operation 25 'read' 'height' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i16P(i16* %out_width, i16 %width)" [yuv_filter.c:41->yuv_filter.c:12]   --->   Operation 26 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_1 : Operation 27 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i16P(i16* %out_height, i16 %height)" [yuv_filter.c:42->yuv_filter.c:12]   --->   Operation 27 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%cast = zext i16 %width to i32" [yuv_filter.c:39->yuv_filter.c:12]   --->   Operation 28 'zext' 'cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%cast1 = zext i16 %height to i32" [yuv_filter.c:40->yuv_filter.c:12]   --->   Operation 29 'zext' 'cast1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (6.38ns) (root node of the DSP)   --->   "%bound = mul i32 %cast1, %cast" [yuv_filter.c:40->yuv_filter.c:12]   --->   Operation 30 'mul' 'bound' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 31 [1/1] (1.76ns)   --->   "br label %0" [yuv_filter.c:45->yuv_filter.c:12]   --->   Operation 31 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 7.34>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i32 [ 0, %entry ], [ %add_ln45, %RGB2YUV_LOOP_Y ]" [yuv_filter.c:45->yuv_filter.c:12]   --->   Operation 32 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%x_0_i_i = phi i16 [ 0, %entry ], [ %select_ln54_1, %RGB2YUV_LOOP_Y ]" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 33 'phi' 'x_0_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%y_0_i_i = phi i16 [ 0, %entry ], [ %y, %RGB2YUV_LOOP_Y ]"   --->   Operation 34 'phi' 'y_0_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (2.47ns)   --->   "%icmp_ln45 = icmp eq i32 %indvar_flatten, %bound" [yuv_filter.c:45->yuv_filter.c:12]   --->   Operation 35 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (2.55ns)   --->   "%add_ln45 = add i32 %indvar_flatten, 1" [yuv_filter.c:45->yuv_filter.c:12]   --->   Operation 36 'add' 'add_ln45' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %icmp_ln45, label %.exit, label %RGB2YUV_LOOP_Y" [yuv_filter.c:45->yuv_filter.c:12]   --->   Operation 37 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (2.07ns)   --->   "%x = add i16 1, %x_0_i_i" [yuv_filter.c:45->yuv_filter.c:12]   --->   Operation 38 'add' 'x' <Predicate = (!icmp_ln45)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (2.42ns)   --->   "%icmp_ln48 = icmp eq i16 %y_0_i_i, %height" [yuv_filter.c:48->yuv_filter.c:12]   --->   Operation 39 'icmp' 'icmp_ln48' <Predicate = (!icmp_ln45)> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.80ns)   --->   "%select_ln54 = select i1 %icmp_ln48, i16 0, i16 %y_0_i_i" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 40 'select' 'select_ln54' <Predicate = (!icmp_ln45)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.80ns)   --->   "%select_ln54_1 = select i1 %icmp_ln48, i16 %x, i16 %x_0_i_i" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 41 'select' 'select_ln54_1' <Predicate = (!icmp_ln45)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i16 %select_ln54_1 to i13" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 42 'trunc' 'trunc_ln54' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln54_cast = call i23 @_ssdm_op_BitConcatenate.i23.i13.i10(i13 %trunc_ln54, i10 0)" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 43 'bitconcatenate' 'zext_ln54_cast' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln54_1 = trunc i16 %select_ln54_1 to i15" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 44 'trunc' 'trunc_ln54_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln54_2_cast = call i23 @_ssdm_op_BitConcatenate.i23.i15.i8(i15 %trunc_ln54_1, i8 0)" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 45 'bitconcatenate' 'zext_ln54_2_cast' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54 = add i23 %zext_ln54_cast, %zext_ln54_2_cast" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 46 'add' 'add_ln54' <Predicate = (!icmp_ln45)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.95> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i16 %select_ln54 to i23" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 47 'zext' 'zext_ln54' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (4.10ns) (root node of TernaryAdder)   --->   "%add_ln54_1 = add i23 %zext_ln54, %add_ln54" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 48 'add' 'add_ln54_1' <Predicate = (!icmp_ln45)> <Delay = 4.10> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.95> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 49 [1/1] (2.07ns)   --->   "%y = add i16 1, %select_ln54" [yuv_filter.c:48->yuv_filter.c:12]   --->   Operation 49 'add' 'y' <Predicate = (!icmp_ln45)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln54_1 = zext i23 %add_ln54_1 to i64" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 50 'zext' 'zext_ln54_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%in_channels_ch1_addr = getelementptr [2457600 x i8]* %in_channels_ch1, i64 0, i64 %zext_ln54_1" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 51 'getelementptr' 'in_channels_ch1_addr' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%in_channels_ch2_addr = getelementptr [2457600 x i8]* %in_channels_ch2, i64 0, i64 %zext_ln54_1" [yuv_filter.c:55->yuv_filter.c:12]   --->   Operation 52 'getelementptr' 'in_channels_ch2_addr' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%in_channels_ch3_addr = getelementptr [2457600 x i8]* %in_channels_ch3, i64 0, i64 %zext_ln54_1" [yuv_filter.c:56->yuv_filter.c:12]   --->   Operation 53 'getelementptr' 'in_channels_ch3_addr' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 54 [4/4] (3.25ns)   --->   "%R = load i8* %in_channels_ch1_addr, align 1" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 54 'load' 'R' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>
ST_3 : Operation 55 [4/4] (3.25ns)   --->   "%G = load i8* %in_channels_ch2_addr, align 1" [yuv_filter.c:55->yuv_filter.c:12]   --->   Operation 55 'load' 'G' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>
ST_3 : Operation 56 [4/4] (3.25ns)   --->   "%B = load i8* %in_channels_ch3_addr, align 1" [yuv_filter.c:56->yuv_filter.c:12]   --->   Operation 56 'load' 'B' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 57 [3/4] (3.25ns)   --->   "%R = load i8* %in_channels_ch1_addr, align 1" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 57 'load' 'R' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>
ST_4 : Operation 58 [3/4] (3.25ns)   --->   "%G = load i8* %in_channels_ch2_addr, align 1" [yuv_filter.c:55->yuv_filter.c:12]   --->   Operation 58 'load' 'G' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>
ST_4 : Operation 59 [3/4] (3.25ns)   --->   "%B = load i8* %in_channels_ch3_addr, align 1" [yuv_filter.c:56->yuv_filter.c:12]   --->   Operation 59 'load' 'B' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>

State 5 <SV = 4> <Delay = 3.25>
ST_5 : Operation 60 [2/4] (3.25ns)   --->   "%R = load i8* %in_channels_ch1_addr, align 1" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 60 'load' 'R' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>
ST_5 : Operation 61 [2/4] (3.25ns)   --->   "%G = load i8* %in_channels_ch2_addr, align 1" [yuv_filter.c:55->yuv_filter.c:12]   --->   Operation 61 'load' 'G' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>
ST_5 : Operation 62 [2/4] (3.25ns)   --->   "%B = load i8* %in_channels_ch3_addr, align 1" [yuv_filter.c:56->yuv_filter.c:12]   --->   Operation 62 'load' 'B' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>

State 6 <SV = 5> <Delay = 3.25>
ST_6 : Operation 63 [1/4] (3.25ns)   --->   "%R = load i8* %in_channels_ch1_addr, align 1" [yuv_filter.c:54->yuv_filter.c:12]   --->   Operation 63 'load' 'R' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>
ST_6 : Operation 64 [1/4] (3.25ns)   --->   "%G = load i8* %in_channels_ch2_addr, align 1" [yuv_filter.c:55->yuv_filter.c:12]   --->   Operation 64 'load' 'G' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>
ST_6 : Operation 65 [1/4] (3.25ns)   --->   "%B = load i8* %in_channels_ch3_addr, align 1" [yuv_filter.c:56->yuv_filter.c:12]   --->   Operation 65 'load' 'B' <Predicate = (!icmp_ln45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 3> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 2457600> <RAM>

State 7 <SV = 6> <Delay = 10.2>
ST_7 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i8 %R to i15" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 66 'zext' 'zext_ln59' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "%shl_ln = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %R, i6 0)" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 67 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i14 %shl_ln to i15" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 68 'zext' 'zext_ln57' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 69 [1/1] (0.00ns)   --->   "%shl_ln57_1 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %R, i1 false)" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 69 'bitconcatenate' 'shl_ln57_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln57_1 = zext i9 %shl_ln57_1 to i10" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 70 'zext' 'zext_ln57_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln57_3 = zext i8 %G to i13" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 71 'zext' 'zext_ln57_3' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%shl_ln57_2 = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %G, i7 0)" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 72 'bitconcatenate' 'shl_ln57_2' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln57_4 = zext i15 %shl_ln57_2 to i16" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 73 'zext' 'zext_ln57_4' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln57_5 = zext i8 %B to i13" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 74 'zext' 'zext_ln57_5' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (3.36ns) (grouped into DSP with root node add_ln57_3)   --->   "%mul_ln57 = mul i13 25, %zext_ln57_5" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 75 'mul' 'mul_ln57' <Predicate = (!icmp_ln45)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 76 [1/1] (1.82ns)   --->   "%add_ln57 = add i10 128, %zext_ln57_1" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 76 'add' 'add_ln57' <Predicate = (!icmp_ln45)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln57_6 = zext i10 %add_ln57 to i15" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 77 'zext' 'zext_ln57_6' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 78 [1/1] (1.81ns)   --->   "%add_ln57_1 = add i15 %zext_ln57_6, %zext_ln57" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 78 'add' 'add_ln57_1' <Predicate = (!icmp_ln45)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln57_7 = zext i15 %add_ln57_1 to i16" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 79 'zext' 'zext_ln57_7' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln57_2 = add i16 %zext_ln57_4, %zext_ln57_7" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 80 'add' 'add_ln57_2' <Predicate = (!icmp_ln45)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.95> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 81 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln57_3 = add i13 %mul_ln57, %zext_ln57_3" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 81 'add' 'add_ln57_3' <Predicate = (!icmp_ln45)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln57_8 = zext i13 %add_ln57_3 to i16" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 82 'zext' 'zext_ln57_8' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 83 [1/1] (3.90ns) (root node of TernaryAdder)   --->   "%add_ln57_4 = add i16 %zext_ln57_8, %add_ln57_2" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 83 'add' 'add_ln57_4' <Predicate = (!icmp_ln45)> <Delay = 3.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.95> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %add_ln57_4, i32 8, i32 15)" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 84 'partselect' 'trunc_ln' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 85 [1/1] (3.36ns) (grouped into DSP with root node add_ln58)   --->   "%mul_ln58 = mul i15 -38, %zext_ln59" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 85 'mul' 'mul_ln58' <Predicate = (!icmp_ln45)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%shl_ln1 = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %B, i7 0)" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 86 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i15 %shl_ln1 to i16" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 87 'zext' 'zext_ln58' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%shl_ln58_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %B, i4 0)" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 88 'bitconcatenate' 'shl_ln58_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln58_1 = zext i12 %shl_ln58_1 to i13" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 89 'zext' 'zext_ln58_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln58_2 = zext i12 %shl_ln58_1 to i16" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 90 'zext' 'zext_ln58_2' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln58 = sub i16 %zext_ln58, %zext_ln58_2" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 91 'sub' 'sub_ln58' <Predicate = (!icmp_ln45)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.95> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 92 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln58 = add i15 128, %mul_ln58" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 92 'add' 'add_ln58' <Predicate = (!icmp_ln45)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%sext_ln58 = sext i15 %add_ln58 to i16" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 93 'sext' 'sext_ln58' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (3.90ns) (root node of TernaryAdder)   --->   "%add_ln58_1 = add i16 %sub_ln58, %sext_ln58" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 94 'add' 'add_ln58_1' <Predicate = (!icmp_ln45)> <Delay = 3.90> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.95> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 95 [1/1] (3.36ns) (grouped into DSP with root node add_ln59)   --->   "%mul_ln59 = mul i15 122, %zext_ln59" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 95 'mul' 'mul_ln59' <Predicate = (!icmp_ln45)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 96 [1/1] (1.54ns)   --->   "%sub_ln59 = sub i13 0, %zext_ln58_1" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 96 'sub' 'sub_ln59' <Predicate = (!icmp_ln45)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%sext_ln59 = sext i13 %sub_ln59 to i14" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 97 'sext' 'sext_ln59' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%shl_ln2 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %B, i1 false)" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 98 'bitconcatenate' 'shl_ln2' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln59_1 = zext i9 %shl_ln2 to i14" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 99 'zext' 'zext_ln59_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 100 [1/1] (1.67ns)   --->   "%sub_ln59_1 = sub i14 %sext_ln59, %zext_ln59_1" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 100 'sub' 'sub_ln59_1' <Predicate = (!icmp_ln45)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (0.00ns)   --->   "%sext_ln59_1 = sext i14 %sub_ln59_1 to i16" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 101 'sext' 'sext_ln59_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 102 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln59 = add i15 128, %mul_ln59" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 102 'add' 'add_ln59' <Predicate = (!icmp_ln45)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln59_2 = zext i15 %add_ln59 to i16" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 103 'zext' 'zext_ln59_2' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_7 : Operation 104 [1/1] (1.94ns)   --->   "%add_ln59_1 = add i16 %zext_ln59_2, %sext_ln59_1" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 104 'add' 'add_ln59_1' <Predicate = (!icmp_ln45)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 11.0>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([30 x i8]* @RGB2YUV_LOOP_X_RGB2Y)"   --->   Operation 105 'specloopname' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 40000, i64 2457600, i64 784400)"   --->   Operation 106 'speclooptripcount' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str2) nounwind" [yuv_filter.c:48->yuv_filter.c:12]   --->   Operation 107 'specloopname' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_3_i_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str2)" [yuv_filter.c:48->yuv_filter.c:12]   --->   Operation 108 'specregionbegin' 'tmp_3_i_i' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_8 : Operation 109 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [yuv_filter.c:49->yuv_filter.c:12]   --->   Operation 109 'specpipeline' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln57_2 = zext i8 %G to i16" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 110 'zext' 'zext_ln57_2' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_8 : Operation 111 [1/1] (1.91ns)   --->   "%Y = add i8 16, %trunc_ln" [yuv_filter.c:57->yuv_filter.c:12]   --->   Operation 111 'add' 'Y' <Predicate = (!icmp_ln45)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 112 [1/1] (3.36ns) (grouped into DSP with root node add_ln58_2)   --->   "%mul_ln58_1 = mul i16 -74, %zext_ln57_2" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 112 'mul' 'mul_ln58_1' <Predicate = (!icmp_ln45)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 113 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln58_2 = add i16 %add_ln58_1, %mul_ln58_1" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 113 'add' 'add_ln58_2' <Predicate = (!icmp_ln45)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln5 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %add_ln58_2, i32 8, i32 15)" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 114 'partselect' 'trunc_ln5' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.99ns)   --->   "%U = xor i8 %trunc_ln5, -128" [yuv_filter.c:58->yuv_filter.c:12]   --->   Operation 115 'xor' 'U' <Predicate = (!icmp_ln45)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 116 [1/1] (3.36ns) (grouped into DSP with root node add_ln59_2)   --->   "%mul_ln59_1 = mul i16 -94, %zext_ln57_2" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 116 'mul' 'mul_ln59_1' <Predicate = (!icmp_ln45)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 117 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln59_2 = add i16 %add_ln59_1, %mul_ln59_1" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 117 'add' 'add_ln59_2' <Predicate = (!icmp_ln45)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 118 [1/1] (0.00ns)   --->   "%trunc_ln6 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %add_ln59_2, i32 8, i32 15)" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 118 'partselect' 'trunc_ln6' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (0.99ns)   --->   "%V = xor i8 %trunc_ln6, -128" [yuv_filter.c:59->yuv_filter.c:12]   --->   Operation 119 'xor' 'V' <Predicate = (!icmp_ln45)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 120 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %out_channels_ch1, i8 %Y)" [yuv_filter.c:60->yuv_filter.c:12]   --->   Operation 120 'write' <Predicate = (!icmp_ln45)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_8 : Operation 121 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %out_channels_ch2, i8 %U)" [yuv_filter.c:61->yuv_filter.c:12]   --->   Operation 121 'write' <Predicate = (!icmp_ln45)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_8 : Operation 122 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i8P(i8* %out_channels_ch3, i8 %V)" [yuv_filter.c:62->yuv_filter.c:12]   --->   Operation 122 'write' <Predicate = (!icmp_ln45)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 16> <Depth = 2> <FIFO>
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "%empty_79 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str2, i32 %tmp_3_i_i)" [yuv_filter.c:63->yuv_filter.c:12]   --->   Operation 123 'specregionend' 'empty_79' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "br label %0" [yuv_filter.c:48->yuv_filter.c:12]   --->   Operation 124 'br' <Predicate = (!icmp_ln45)> <Delay = 0.00>

State 9 <SV = 2> <Delay = 0.00>
ST_9 : Operation 125 [1/1] (0.00ns)   --->   "ret void" [yuv_filter.c:12]   --->   Operation 125 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 6.38ns
The critical path consists of the following:
	wire read on port 'in_width' (yuv_filter.c:39->yuv_filter.c:12) [31]  (0 ns)
	'mul' operation of DSP[37] ('bound', yuv_filter.c:40->yuv_filter.c:12) [37]  (6.38 ns)

 <State 2>: 7.34ns
The critical path consists of the following:
	'phi' operation ('y') with incoming values : ('y', yuv_filter.c:48->yuv_filter.c:12) [42]  (0 ns)
	'icmp' operation ('icmp_ln48', yuv_filter.c:48->yuv_filter.c:12) [50]  (2.43 ns)
	'select' operation ('select_ln54_1', yuv_filter.c:54->yuv_filter.c:12) [52]  (0.805 ns)
	'add' operation ('add_ln54', yuv_filter.c:54->yuv_filter.c:12) [57]  (0 ns)
	'add' operation ('add_ln54_1', yuv_filter.c:54->yuv_filter.c:12) [62]  (4.11 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('in_channels_ch1_addr', yuv_filter.c:54->yuv_filter.c:12) [64]  (0 ns)
	'load' operation ('R', yuv_filter.c:54->yuv_filter.c:12) on array 'in_channels_ch1' [67]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('R', yuv_filter.c:54->yuv_filter.c:12) on array 'in_channels_ch1' [67]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'load' operation ('R', yuv_filter.c:54->yuv_filter.c:12) on array 'in_channels_ch1' [67]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('R', yuv_filter.c:54->yuv_filter.c:12) on array 'in_channels_ch1' [67]  (3.25 ns)

 <State 7>: 10.3ns
The critical path consists of the following:
	'mul' operation of DSP[99] ('mul_ln58', yuv_filter.c:58->yuv_filter.c:12) [91]  (3.36 ns)
	'add' operation of DSP[99] ('add_ln58', yuv_filter.c:58->yuv_filter.c:12) [99]  (3.02 ns)
	'add' operation ('add_ln58_1', yuv_filter.c:58->yuv_filter.c:12) [101]  (3.9 ns)

 <State 8>: 11ns
The critical path consists of the following:
	'mul' operation of DSP[102] ('mul_ln58_1', yuv_filter.c:58->yuv_filter.c:12) [92]  (3.36 ns)
	'add' operation of DSP[102] ('add_ln58_2', yuv_filter.c:58->yuv_filter.c:12) [102]  (3.02 ns)
	'xor' operation ('U', yuv_filter.c:58->yuv_filter.c:12) [104]  (0.99 ns)
	fifo write on port 'out_channels_ch2' (yuv_filter.c:61->yuv_filter.c:12) [120]  (3.63 ns)

 <State 9>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
