// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "rgb2yuv11.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic rgb2yuv11::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic rgb2yuv11::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> rgb2yuv11::ap_ST_fsm_state1 = "1";
const sc_lv<3> rgb2yuv11::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> rgb2yuv11::ap_ST_fsm_state9 = "100";
const bool rgb2yuv11::ap_const_boolean_1 = true;
const sc_lv<32> rgb2yuv11::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool rgb2yuv11::ap_const_boolean_0 = false;
const sc_lv<1> rgb2yuv11::ap_const_lv1_0 = "0";
const sc_lv<32> rgb2yuv11::ap_const_lv32_1 = "1";
const sc_lv<1> rgb2yuv11::ap_const_lv1_1 = "1";
const sc_lv<16> rgb2yuv11::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> rgb2yuv11::ap_const_lv16_1 = "1";
const sc_lv<10> rgb2yuv11::ap_const_lv10_0 = "0000000000";
const sc_lv<8> rgb2yuv11::ap_const_lv8_0 = "00000000";
const sc_lv<6> rgb2yuv11::ap_const_lv6_0 = "000000";
const sc_lv<7> rgb2yuv11::ap_const_lv7_0 = "0000000";
const sc_lv<10> rgb2yuv11::ap_const_lv10_80 = "10000000";
const sc_lv<32> rgb2yuv11::ap_const_lv32_8 = "1000";
const sc_lv<32> rgb2yuv11::ap_const_lv32_F = "1111";
const sc_lv<4> rgb2yuv11::ap_const_lv4_0 = "0000";
const sc_lv<13> rgb2yuv11::ap_const_lv13_0 = "0000000000000";
const sc_lv<8> rgb2yuv11::ap_const_lv8_10 = "10000";
const sc_lv<8> rgb2yuv11::ap_const_lv8_80 = "10000000";
const sc_lv<13> rgb2yuv11::ap_const_lv13_19 = "11001";
const sc_lv<15> rgb2yuv11::ap_const_lv15_7FDA = "111111111011010";
const sc_lv<15> rgb2yuv11::ap_const_lv15_80 = "10000000";
const sc_lv<15> rgb2yuv11::ap_const_lv15_7A = "1111010";
const sc_lv<16> rgb2yuv11::ap_const_lv16_FFB6 = "1111111110110110";
const sc_lv<16> rgb2yuv11::ap_const_lv16_FFA2 = "1111111110100010";
const sc_lv<32> rgb2yuv11::ap_const_lv32_2 = "10";

rgb2yuv11::rgb2yuv11(sc_module_name name) : sc_module(name), mVcdFile(0) {
    yuv_filter_mul_mubkb_U1 = new yuv_filter_mul_mubkb<1,1,16,16,32>("yuv_filter_mul_mubkb_U1");
    yuv_filter_mul_mubkb_U1->din0(bound_fu_606_p0);
    yuv_filter_mul_mubkb_U1->din1(bound_fu_606_p1);
    yuv_filter_mul_mubkb_U1->dout(bound_fu_606_p2);
    yuv_filter_mac_mucud_U2 = new yuv_filter_mac_mucud<1,1,6,8,8,13>("yuv_filter_mac_mucud_U2");
    yuv_filter_mac_mucud_U2->din0(grp_fu_612_p0);
    yuv_filter_mac_mucud_U2->din1(grp_fu_612_p1);
    yuv_filter_mac_mucud_U2->din2(grp_fu_612_p2);
    yuv_filter_mac_mucud_U2->dout(grp_fu_612_p3);
    yuv_filter_mac_mudEe_U3 = new yuv_filter_mac_mudEe<1,1,7,8,9,15>("yuv_filter_mac_mudEe_U3");
    yuv_filter_mac_mudEe_U3->din0(grp_fu_621_p0);
    yuv_filter_mac_mudEe_U3->din1(grp_fu_621_p1);
    yuv_filter_mac_mudEe_U3->din2(grp_fu_621_p2);
    yuv_filter_mac_mudEe_U3->dout(grp_fu_621_p3);
    yuv_filter_mac_mueOg_U4 = new yuv_filter_mac_mueOg<1,1,8,8,9,15>("yuv_filter_mac_mueOg_U4");
    yuv_filter_mac_mueOg_U4->din0(grp_fu_630_p0);
    yuv_filter_mac_mueOg_U4->din1(grp_fu_630_p1);
    yuv_filter_mac_mueOg_U4->din2(grp_fu_630_p2);
    yuv_filter_mac_mueOg_U4->dout(grp_fu_630_p3);
    yuv_filter_mac_mufYi_U5 = new yuv_filter_mac_mufYi<1,1,8,8,16,16>("yuv_filter_mac_mufYi_U5");
    yuv_filter_mac_mufYi_U5->din0(grp_fu_639_p0);
    yuv_filter_mac_mufYi_U5->din1(grp_fu_639_p1);
    yuv_filter_mac_mufYi_U5->din2(add_ln58_1_reg_731);
    yuv_filter_mac_mufYi_U5->dout(grp_fu_639_p3);
    yuv_filter_mac_mufYi_U6 = new yuv_filter_mac_mufYi<1,1,8,8,16,16>("yuv_filter_mac_mufYi_U6");
    yuv_filter_mac_mufYi_U6->din0(grp_fu_647_p0);
    yuv_filter_mac_mufYi_U6->din1(grp_fu_647_p1);
    yuv_filter_mac_mufYi_U6->din2(add_ln59_1_reg_736);
    yuv_filter_mac_mufYi_U6->dout(grp_fu_647_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_U_scale_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( U_scale_out_full_n );

    SC_METHOD(thread_U_scale_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( U_scale );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_U_scale_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_V_scale_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_V_scale_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( V_scale );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_V_scale_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_Y_scale_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( Y_scale_out_full_n );

    SC_METHOD(thread_Y_scale_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_Y_scale_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_add_ln45_fu_312_p2);
    sensitive << ( indvar_flatten_reg_266 );

    SC_METHOD(thread_add_ln54_1_fu_379_p2);
    sensitive << ( zext_ln54_fu_375_p1 );
    sensitive << ( add_ln54_fu_369_p2 );

    SC_METHOD(thread_add_ln54_fu_369_p2);
    sensitive << ( zext_ln54_cast_fu_349_p3 );
    sensitive << ( zext_ln54_2_cast_fu_361_p3 );

    SC_METHOD(thread_add_ln57_1_fu_449_p2);
    sensitive << ( zext_ln57_6_fu_445_p1 );
    sensitive << ( zext_ln57_fu_407_p1 );

    SC_METHOD(thread_add_ln57_2_fu_459_p2);
    sensitive << ( zext_ln57_4_fu_432_p1 );
    sensitive << ( zext_ln57_7_fu_455_p1 );

    SC_METHOD(thread_add_ln57_4_fu_468_p2);
    sensitive << ( zext_ln57_8_fu_465_p1 );
    sensitive << ( add_ln57_2_fu_459_p2 );

    SC_METHOD(thread_add_ln57_fu_439_p2);
    sensitive << ( zext_ln57_1_fu_418_p1 );

    SC_METHOD(thread_add_ln58_1_fu_519_p2);
    sensitive << ( sub_ln58_fu_510_p2 );
    sensitive << ( sext_ln58_fu_516_p1 );

    SC_METHOD(thread_add_ln59_1_fu_559_p2);
    sensitive << ( zext_ln59_2_fu_556_p1 );
    sensitive << ( sext_ln59_1_fu_552_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln45_fu_307_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_phi_mux_x_0_i_i_phi_fu_281_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665 );
    sensitive << ( x_0_i_i_reg_277 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln54_1_reg_674 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bound_fu_606_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_606_p00 );

    SC_METHOD(thread_bound_fu_606_p00);
    sensitive << ( in_height );

    SC_METHOD(thread_bound_fu_606_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_606_p10 );

    SC_METHOD(thread_bound_fu_606_p10);
    sensitive << ( in_width );

    SC_METHOD(thread_grp_fu_612_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_612_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( grp_fu_612_p10 );

    SC_METHOD(thread_grp_fu_612_p10);
    sensitive << ( B_reg_718 );

    SC_METHOD(thread_grp_fu_612_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( grp_fu_612_p20 );

    SC_METHOD(thread_grp_fu_612_p20);
    sensitive << ( G_reg_711 );

    SC_METHOD(thread_grp_fu_621_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_621_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( zext_ln59_fu_397_p1 );

    SC_METHOD(thread_grp_fu_621_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_630_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_630_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( zext_ln59_fu_397_p1 );

    SC_METHOD(thread_grp_fu_630_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_639_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );

    SC_METHOD(thread_grp_fu_639_p1);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );
    sensitive << ( zext_ln57_2_fu_565_p1 );

    SC_METHOD(thread_grp_fu_647_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );

    SC_METHOD(thread_grp_fu_647_p1);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );
    sensitive << ( zext_ln57_2_fu_565_p1 );

    SC_METHOD(thread_icmp_ln45_fu_307_p2);
    sensitive << ( indvar_flatten_reg_266 );
    sensitive << ( bound_reg_660 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln48_fu_324_p2);
    sensitive << ( in_height );
    sensitive << ( y_0_i_i_reg_288 );
    sensitive << ( icmp_ln45_fu_307_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_in_channels_ch1_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln54_1_fu_391_p1 );

    SC_METHOD(thread_in_channels_ch1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_in_channels_ch2_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln54_1_fu_391_p1 );

    SC_METHOD(thread_in_channels_ch2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_in_channels_ch3_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( zext_ln54_1_fu_391_p1 );

    SC_METHOD(thread_in_channels_ch3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_out_channels_ch1_blk_n);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );

    SC_METHOD(thread_out_channels_ch1_din);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );
    sensitive << ( trunc_ln_reg_726 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_channels_ch1_write);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_channels_ch2_blk_n);
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );

    SC_METHOD(thread_out_channels_ch2_din);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( trunc_ln5_fu_574_p4 );

    SC_METHOD(thread_out_channels_ch2_write);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_channels_ch3_blk_n);
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );

    SC_METHOD(thread_out_channels_ch3_din);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( trunc_ln6_fu_590_p4 );

    SC_METHOD(thread_out_channels_ch3_write);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_reg_665_pp0_iter5_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_height_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_height_full_n );

    SC_METHOD(thread_out_height_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_height );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_out_height_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_out_width_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );

    SC_METHOD(thread_out_width_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_width );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_out_width_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_select_ln54_1_fu_337_p3);
    sensitive << ( ap_phi_mux_x_0_i_i_phi_fu_281_p4 );
    sensitive << ( icmp_ln48_fu_324_p2 );
    sensitive << ( x_fu_318_p2 );

    SC_METHOD(thread_select_ln54_fu_329_p3);
    sensitive << ( y_0_i_i_reg_288 );
    sensitive << ( icmp_ln48_fu_324_p2 );

    SC_METHOD(thread_sext_ln58_fu_516_p1);
    sensitive << ( grp_fu_621_p3 );

    SC_METHOD(thread_sext_ln59_1_fu_552_p1);
    sensitive << ( sub_ln59_1_fu_546_p2 );

    SC_METHOD(thread_sext_ln59_fu_531_p1);
    sensitive << ( sub_ln59_fu_525_p2 );

    SC_METHOD(thread_shl_ln1_fu_484_p3);
    sensitive << ( B_reg_718 );

    SC_METHOD(thread_shl_ln2_fu_535_p3);
    sensitive << ( B_reg_718 );

    SC_METHOD(thread_shl_ln57_1_fu_411_p3);
    sensitive << ( R_reg_704 );

    SC_METHOD(thread_shl_ln57_2_fu_425_p3);
    sensitive << ( G_reg_711 );

    SC_METHOD(thread_shl_ln58_1_fu_495_p3);
    sensitive << ( B_reg_718 );

    SC_METHOD(thread_shl_ln_fu_400_p3);
    sensitive << ( R_reg_704 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sub_ln58_fu_510_p2);
    sensitive << ( zext_ln58_fu_491_p1 );
    sensitive << ( zext_ln58_2_fu_506_p1 );

    SC_METHOD(thread_sub_ln59_1_fu_546_p2);
    sensitive << ( sext_ln59_fu_531_p1 );
    sensitive << ( zext_ln59_1_fu_542_p1 );

    SC_METHOD(thread_sub_ln59_fu_525_p2);
    sensitive << ( zext_ln58_1_fu_502_p1 );

    SC_METHOD(thread_trunc_ln54_1_fu_357_p1);
    sensitive << ( select_ln54_1_fu_337_p3 );

    SC_METHOD(thread_trunc_ln54_fu_345_p1);
    sensitive << ( select_ln54_1_fu_337_p3 );

    SC_METHOD(thread_trunc_ln5_fu_574_p4);
    sensitive << ( grp_fu_639_p3 );

    SC_METHOD(thread_trunc_ln6_fu_590_p4);
    sensitive << ( grp_fu_647_p3 );

    SC_METHOD(thread_x_fu_318_p2);
    sensitive << ( ap_phi_mux_x_0_i_i_phi_fu_281_p4 );

    SC_METHOD(thread_y_fu_385_p2);
    sensitive << ( select_ln54_fu_329_p3 );

    SC_METHOD(thread_zext_ln54_1_fu_391_p1);
    sensitive << ( add_ln54_1_reg_679 );

    SC_METHOD(thread_zext_ln54_2_cast_fu_361_p3);
    sensitive << ( trunc_ln54_1_fu_357_p1 );

    SC_METHOD(thread_zext_ln54_cast_fu_349_p3);
    sensitive << ( trunc_ln54_fu_345_p1 );

    SC_METHOD(thread_zext_ln54_fu_375_p1);
    sensitive << ( select_ln54_fu_329_p3 );

    SC_METHOD(thread_zext_ln57_1_fu_418_p1);
    sensitive << ( shl_ln57_1_fu_411_p3 );

    SC_METHOD(thread_zext_ln57_2_fu_565_p1);
    sensitive << ( G_reg_711_pp0_iter5_reg );

    SC_METHOD(thread_zext_ln57_4_fu_432_p1);
    sensitive << ( shl_ln57_2_fu_425_p3 );

    SC_METHOD(thread_zext_ln57_6_fu_445_p1);
    sensitive << ( add_ln57_fu_439_p2 );

    SC_METHOD(thread_zext_ln57_7_fu_455_p1);
    sensitive << ( add_ln57_1_fu_449_p2 );

    SC_METHOD(thread_zext_ln57_8_fu_465_p1);
    sensitive << ( grp_fu_612_p3 );

    SC_METHOD(thread_zext_ln57_fu_407_p1);
    sensitive << ( shl_ln_fu_400_p3 );

    SC_METHOD(thread_zext_ln58_1_fu_502_p1);
    sensitive << ( shl_ln58_1_fu_495_p3 );

    SC_METHOD(thread_zext_ln58_2_fu_506_p1);
    sensitive << ( shl_ln58_1_fu_495_p3 );

    SC_METHOD(thread_zext_ln58_fu_491_p1);
    sensitive << ( shl_ln1_fu_484_p3 );

    SC_METHOD(thread_zext_ln59_1_fu_542_p1);
    sensitive << ( shl_ln2_fu_535_p3 );

    SC_METHOD(thread_zext_ln59_2_fu_556_p1);
    sensitive << ( grp_fu_630_p3 );

    SC_METHOD(thread_zext_ln59_fu_397_p1);
    sensitive << ( R_reg_704 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( icmp_ln45_fu_307_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "rgb2yuv11_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_channels_ch1_address0, "(port)in_channels_ch1_address0");
    sc_trace(mVcdFile, in_channels_ch1_ce0, "(port)in_channels_ch1_ce0");
    sc_trace(mVcdFile, in_channels_ch1_q0, "(port)in_channels_ch1_q0");
    sc_trace(mVcdFile, in_channels_ch2_address0, "(port)in_channels_ch2_address0");
    sc_trace(mVcdFile, in_channels_ch2_ce0, "(port)in_channels_ch2_ce0");
    sc_trace(mVcdFile, in_channels_ch2_q0, "(port)in_channels_ch2_q0");
    sc_trace(mVcdFile, in_channels_ch3_address0, "(port)in_channels_ch3_address0");
    sc_trace(mVcdFile, in_channels_ch3_ce0, "(port)in_channels_ch3_ce0");
    sc_trace(mVcdFile, in_channels_ch3_q0, "(port)in_channels_ch3_q0");
    sc_trace(mVcdFile, in_width, "(port)in_width");
    sc_trace(mVcdFile, in_height, "(port)in_height");
    sc_trace(mVcdFile, out_channels_ch1_din, "(port)out_channels_ch1_din");
    sc_trace(mVcdFile, out_channels_ch1_full_n, "(port)out_channels_ch1_full_n");
    sc_trace(mVcdFile, out_channels_ch1_write, "(port)out_channels_ch1_write");
    sc_trace(mVcdFile, out_channels_ch2_din, "(port)out_channels_ch2_din");
    sc_trace(mVcdFile, out_channels_ch2_full_n, "(port)out_channels_ch2_full_n");
    sc_trace(mVcdFile, out_channels_ch2_write, "(port)out_channels_ch2_write");
    sc_trace(mVcdFile, out_channels_ch3_din, "(port)out_channels_ch3_din");
    sc_trace(mVcdFile, out_channels_ch3_full_n, "(port)out_channels_ch3_full_n");
    sc_trace(mVcdFile, out_channels_ch3_write, "(port)out_channels_ch3_write");
    sc_trace(mVcdFile, out_width_din, "(port)out_width_din");
    sc_trace(mVcdFile, out_width_full_n, "(port)out_width_full_n");
    sc_trace(mVcdFile, out_width_write, "(port)out_width_write");
    sc_trace(mVcdFile, out_height_din, "(port)out_height_din");
    sc_trace(mVcdFile, out_height_full_n, "(port)out_height_full_n");
    sc_trace(mVcdFile, out_height_write, "(port)out_height_write");
    sc_trace(mVcdFile, Y_scale, "(port)Y_scale");
    sc_trace(mVcdFile, U_scale, "(port)U_scale");
    sc_trace(mVcdFile, V_scale, "(port)V_scale");
    sc_trace(mVcdFile, Y_scale_out_din, "(port)Y_scale_out_din");
    sc_trace(mVcdFile, Y_scale_out_full_n, "(port)Y_scale_out_full_n");
    sc_trace(mVcdFile, Y_scale_out_write, "(port)Y_scale_out_write");
    sc_trace(mVcdFile, U_scale_out_din, "(port)U_scale_out_din");
    sc_trace(mVcdFile, U_scale_out_full_n, "(port)U_scale_out_full_n");
    sc_trace(mVcdFile, U_scale_out_write, "(port)U_scale_out_write");
    sc_trace(mVcdFile, V_scale_out_din, "(port)V_scale_out_din");
    sc_trace(mVcdFile, V_scale_out_full_n, "(port)V_scale_out_full_n");
    sc_trace(mVcdFile, V_scale_out_write, "(port)V_scale_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, out_channels_ch1_blk_n, "out_channels_ch1_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln45_reg_665, "icmp_ln45_reg_665");
    sc_trace(mVcdFile, icmp_ln45_reg_665_pp0_iter5_reg, "icmp_ln45_reg_665_pp0_iter5_reg");
    sc_trace(mVcdFile, out_channels_ch2_blk_n, "out_channels_ch2_blk_n");
    sc_trace(mVcdFile, out_channels_ch3_blk_n, "out_channels_ch3_blk_n");
    sc_trace(mVcdFile, out_width_blk_n, "out_width_blk_n");
    sc_trace(mVcdFile, out_height_blk_n, "out_height_blk_n");
    sc_trace(mVcdFile, Y_scale_out_blk_n, "Y_scale_out_blk_n");
    sc_trace(mVcdFile, U_scale_out_blk_n, "U_scale_out_blk_n");
    sc_trace(mVcdFile, V_scale_out_blk_n, "V_scale_out_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_266, "indvar_flatten_reg_266");
    sc_trace(mVcdFile, x_0_i_i_reg_277, "x_0_i_i_reg_277");
    sc_trace(mVcdFile, y_0_i_i_reg_288, "y_0_i_i_reg_288");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, bound_fu_606_p2, "bound_fu_606_p2");
    sc_trace(mVcdFile, bound_reg_660, "bound_reg_660");
    sc_trace(mVcdFile, icmp_ln45_fu_307_p2, "icmp_ln45_fu_307_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln45_reg_665_pp0_iter1_reg, "icmp_ln45_reg_665_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_665_pp0_iter2_reg, "icmp_ln45_reg_665_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_665_pp0_iter3_reg, "icmp_ln45_reg_665_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln45_reg_665_pp0_iter4_reg, "icmp_ln45_reg_665_pp0_iter4_reg");
    sc_trace(mVcdFile, add_ln45_fu_312_p2, "add_ln45_fu_312_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln54_1_fu_337_p3, "select_ln54_1_fu_337_p3");
    sc_trace(mVcdFile, select_ln54_1_reg_674, "select_ln54_1_reg_674");
    sc_trace(mVcdFile, add_ln54_1_fu_379_p2, "add_ln54_1_fu_379_p2");
    sc_trace(mVcdFile, add_ln54_1_reg_679, "add_ln54_1_reg_679");
    sc_trace(mVcdFile, y_fu_385_p2, "y_fu_385_p2");
    sc_trace(mVcdFile, R_reg_704, "R_reg_704");
    sc_trace(mVcdFile, G_reg_711, "G_reg_711");
    sc_trace(mVcdFile, G_reg_711_pp0_iter5_reg, "G_reg_711_pp0_iter5_reg");
    sc_trace(mVcdFile, B_reg_718, "B_reg_718");
    sc_trace(mVcdFile, trunc_ln_reg_726, "trunc_ln_reg_726");
    sc_trace(mVcdFile, add_ln58_1_fu_519_p2, "add_ln58_1_fu_519_p2");
    sc_trace(mVcdFile, add_ln58_1_reg_731, "add_ln58_1_reg_731");
    sc_trace(mVcdFile, add_ln59_1_fu_559_p2, "add_ln59_1_fu_559_p2");
    sc_trace(mVcdFile, add_ln59_1_reg_736, "add_ln59_1_reg_736");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_phi_mux_x_0_i_i_phi_fu_281_p4, "ap_phi_mux_x_0_i_i_phi_fu_281_p4");
    sc_trace(mVcdFile, zext_ln54_1_fu_391_p1, "zext_ln54_1_fu_391_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, icmp_ln48_fu_324_p2, "icmp_ln48_fu_324_p2");
    sc_trace(mVcdFile, x_fu_318_p2, "x_fu_318_p2");
    sc_trace(mVcdFile, trunc_ln54_fu_345_p1, "trunc_ln54_fu_345_p1");
    sc_trace(mVcdFile, trunc_ln54_1_fu_357_p1, "trunc_ln54_1_fu_357_p1");
    sc_trace(mVcdFile, zext_ln54_cast_fu_349_p3, "zext_ln54_cast_fu_349_p3");
    sc_trace(mVcdFile, zext_ln54_2_cast_fu_361_p3, "zext_ln54_2_cast_fu_361_p3");
    sc_trace(mVcdFile, select_ln54_fu_329_p3, "select_ln54_fu_329_p3");
    sc_trace(mVcdFile, zext_ln54_fu_375_p1, "zext_ln54_fu_375_p1");
    sc_trace(mVcdFile, add_ln54_fu_369_p2, "add_ln54_fu_369_p2");
    sc_trace(mVcdFile, shl_ln_fu_400_p3, "shl_ln_fu_400_p3");
    sc_trace(mVcdFile, shl_ln57_1_fu_411_p3, "shl_ln57_1_fu_411_p3");
    sc_trace(mVcdFile, shl_ln57_2_fu_425_p3, "shl_ln57_2_fu_425_p3");
    sc_trace(mVcdFile, zext_ln57_1_fu_418_p1, "zext_ln57_1_fu_418_p1");
    sc_trace(mVcdFile, add_ln57_fu_439_p2, "add_ln57_fu_439_p2");
    sc_trace(mVcdFile, zext_ln57_6_fu_445_p1, "zext_ln57_6_fu_445_p1");
    sc_trace(mVcdFile, zext_ln57_fu_407_p1, "zext_ln57_fu_407_p1");
    sc_trace(mVcdFile, add_ln57_1_fu_449_p2, "add_ln57_1_fu_449_p2");
    sc_trace(mVcdFile, zext_ln57_4_fu_432_p1, "zext_ln57_4_fu_432_p1");
    sc_trace(mVcdFile, zext_ln57_7_fu_455_p1, "zext_ln57_7_fu_455_p1");
    sc_trace(mVcdFile, grp_fu_612_p3, "grp_fu_612_p3");
    sc_trace(mVcdFile, zext_ln57_8_fu_465_p1, "zext_ln57_8_fu_465_p1");
    sc_trace(mVcdFile, add_ln57_2_fu_459_p2, "add_ln57_2_fu_459_p2");
    sc_trace(mVcdFile, add_ln57_4_fu_468_p2, "add_ln57_4_fu_468_p2");
    sc_trace(mVcdFile, shl_ln1_fu_484_p3, "shl_ln1_fu_484_p3");
    sc_trace(mVcdFile, shl_ln58_1_fu_495_p3, "shl_ln58_1_fu_495_p3");
    sc_trace(mVcdFile, zext_ln58_fu_491_p1, "zext_ln58_fu_491_p1");
    sc_trace(mVcdFile, zext_ln58_2_fu_506_p1, "zext_ln58_2_fu_506_p1");
    sc_trace(mVcdFile, grp_fu_621_p3, "grp_fu_621_p3");
    sc_trace(mVcdFile, sub_ln58_fu_510_p2, "sub_ln58_fu_510_p2");
    sc_trace(mVcdFile, sext_ln58_fu_516_p1, "sext_ln58_fu_516_p1");
    sc_trace(mVcdFile, zext_ln58_1_fu_502_p1, "zext_ln58_1_fu_502_p1");
    sc_trace(mVcdFile, sub_ln59_fu_525_p2, "sub_ln59_fu_525_p2");
    sc_trace(mVcdFile, shl_ln2_fu_535_p3, "shl_ln2_fu_535_p3");
    sc_trace(mVcdFile, sext_ln59_fu_531_p1, "sext_ln59_fu_531_p1");
    sc_trace(mVcdFile, zext_ln59_1_fu_542_p1, "zext_ln59_1_fu_542_p1");
    sc_trace(mVcdFile, sub_ln59_1_fu_546_p2, "sub_ln59_1_fu_546_p2");
    sc_trace(mVcdFile, grp_fu_630_p3, "grp_fu_630_p3");
    sc_trace(mVcdFile, zext_ln59_2_fu_556_p1, "zext_ln59_2_fu_556_p1");
    sc_trace(mVcdFile, sext_ln59_1_fu_552_p1, "sext_ln59_1_fu_552_p1");
    sc_trace(mVcdFile, grp_fu_639_p3, "grp_fu_639_p3");
    sc_trace(mVcdFile, trunc_ln5_fu_574_p4, "trunc_ln5_fu_574_p4");
    sc_trace(mVcdFile, grp_fu_647_p3, "grp_fu_647_p3");
    sc_trace(mVcdFile, trunc_ln6_fu_590_p4, "trunc_ln6_fu_590_p4");
    sc_trace(mVcdFile, bound_fu_606_p0, "bound_fu_606_p0");
    sc_trace(mVcdFile, bound_fu_606_p1, "bound_fu_606_p1");
    sc_trace(mVcdFile, grp_fu_612_p0, "grp_fu_612_p0");
    sc_trace(mVcdFile, grp_fu_612_p1, "grp_fu_612_p1");
    sc_trace(mVcdFile, grp_fu_612_p2, "grp_fu_612_p2");
    sc_trace(mVcdFile, grp_fu_621_p0, "grp_fu_621_p0");
    sc_trace(mVcdFile, grp_fu_621_p1, "grp_fu_621_p1");
    sc_trace(mVcdFile, zext_ln59_fu_397_p1, "zext_ln59_fu_397_p1");
    sc_trace(mVcdFile, grp_fu_621_p2, "grp_fu_621_p2");
    sc_trace(mVcdFile, grp_fu_630_p0, "grp_fu_630_p0");
    sc_trace(mVcdFile, grp_fu_630_p1, "grp_fu_630_p1");
    sc_trace(mVcdFile, grp_fu_630_p2, "grp_fu_630_p2");
    sc_trace(mVcdFile, grp_fu_639_p0, "grp_fu_639_p0");
    sc_trace(mVcdFile, grp_fu_639_p1, "grp_fu_639_p1");
    sc_trace(mVcdFile, zext_ln57_2_fu_565_p1, "zext_ln57_2_fu_565_p1");
    sc_trace(mVcdFile, grp_fu_647_p0, "grp_fu_647_p0");
    sc_trace(mVcdFile, grp_fu_647_p1, "grp_fu_647_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_606_p00, "bound_fu_606_p00");
    sc_trace(mVcdFile, bound_fu_606_p10, "bound_fu_606_p10");
    sc_trace(mVcdFile, grp_fu_612_p10, "grp_fu_612_p10");
    sc_trace(mVcdFile, grp_fu_612_p20, "grp_fu_612_p20");
#endif

    }
}

rgb2yuv11::~rgb2yuv11() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete yuv_filter_mul_mubkb_U1;
    delete yuv_filter_mac_mucud_U2;
    delete yuv_filter_mac_mudEe_U3;
    delete yuv_filter_mac_mueOg_U4;
    delete yuv_filter_mac_mufYi_U5;
    delete yuv_filter_mac_mufYi_U6;
}

void rgb2yuv11::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
            ap_enable_reg_pp0_iter6 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_307_p2.read()))) {
        indvar_flatten_reg_266 = add_ln45_fu_312_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        indvar_flatten_reg_266 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln45_reg_665.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        x_0_i_i_reg_277 = select_ln54_1_reg_674.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        x_0_i_i_reg_277 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_307_p2.read()))) {
        y_0_i_i_reg_288 = y_fu_385_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        y_0_i_i_reg_288 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_665_pp0_iter3_reg.read()))) {
        B_reg_718 = in_channels_ch3_q0.read();
        G_reg_711 = in_channels_ch2_q0.read();
        R_reg_704 = in_channels_ch1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        G_reg_711_pp0_iter5_reg = G_reg_711.read();
        icmp_ln45_reg_665_pp0_iter2_reg = icmp_ln45_reg_665_pp0_iter1_reg.read();
        icmp_ln45_reg_665_pp0_iter3_reg = icmp_ln45_reg_665_pp0_iter2_reg.read();
        icmp_ln45_reg_665_pp0_iter4_reg = icmp_ln45_reg_665_pp0_iter3_reg.read();
        icmp_ln45_reg_665_pp0_iter5_reg = icmp_ln45_reg_665_pp0_iter4_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_307_p2.read()))) {
        add_ln54_1_reg_679 = add_ln54_1_fu_379_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_reg_665_pp0_iter4_reg.read()))) {
        add_ln58_1_reg_731 = add_ln58_1_fu_519_p2.read();
        add_ln59_1_reg_736 = add_ln59_1_fu_559_p2.read();
        trunc_ln_reg_726 = add_ln57_4_fu_468_p2.read().range(15, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        bound_reg_660 = bound_fu_606_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln45_reg_665 = icmp_ln45_fu_307_p2.read();
        icmp_ln45_reg_665_pp0_iter1_reg = icmp_ln45_reg_665.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_307_p2.read()))) {
        select_ln54_1_reg_674 = select_ln54_1_fu_337_p3.read();
    }
}

void rgb2yuv11::thread_U_scale_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        U_scale_out_blk_n = U_scale_out_full_n.read();
    } else {
        U_scale_out_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_U_scale_out_din() {
    U_scale_out_din = U_scale.read();
}

void rgb2yuv11::thread_U_scale_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        U_scale_out_write = ap_const_logic_1;
    } else {
        U_scale_out_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_V_scale_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        V_scale_out_blk_n = V_scale_out_full_n.read();
    } else {
        V_scale_out_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_V_scale_out_din() {
    V_scale_out_din = V_scale.read();
}

void rgb2yuv11::thread_V_scale_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        V_scale_out_write = ap_const_logic_1;
    } else {
        V_scale_out_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_Y_scale_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        Y_scale_out_blk_n = Y_scale_out_full_n.read();
    } else {
        Y_scale_out_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_Y_scale_out_din() {
    Y_scale_out_din = Y_scale.read();
}

void rgb2yuv11::thread_Y_scale_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        Y_scale_out_write = ap_const_logic_1;
    } else {
        Y_scale_out_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_add_ln45_fu_312_p2() {
    add_ln45_fu_312_p2 = (!indvar_flatten_reg_266.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(indvar_flatten_reg_266.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void rgb2yuv11::thread_add_ln54_1_fu_379_p2() {
    add_ln54_1_fu_379_p2 = (!zext_ln54_fu_375_p1.read().is_01() || !add_ln54_fu_369_p2.read().is_01())? sc_lv<23>(): (sc_biguint<23>(zext_ln54_fu_375_p1.read()) + sc_biguint<23>(add_ln54_fu_369_p2.read()));
}

void rgb2yuv11::thread_add_ln54_fu_369_p2() {
    add_ln54_fu_369_p2 = (!zext_ln54_cast_fu_349_p3.read().is_01() || !zext_ln54_2_cast_fu_361_p3.read().is_01())? sc_lv<23>(): (sc_biguint<23>(zext_ln54_cast_fu_349_p3.read()) + sc_biguint<23>(zext_ln54_2_cast_fu_361_p3.read()));
}

void rgb2yuv11::thread_add_ln57_1_fu_449_p2() {
    add_ln57_1_fu_449_p2 = (!zext_ln57_6_fu_445_p1.read().is_01() || !zext_ln57_fu_407_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln57_6_fu_445_p1.read()) + sc_biguint<15>(zext_ln57_fu_407_p1.read()));
}

void rgb2yuv11::thread_add_ln57_2_fu_459_p2() {
    add_ln57_2_fu_459_p2 = (!zext_ln57_4_fu_432_p1.read().is_01() || !zext_ln57_7_fu_455_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln57_4_fu_432_p1.read()) + sc_biguint<16>(zext_ln57_7_fu_455_p1.read()));
}

void rgb2yuv11::thread_add_ln57_4_fu_468_p2() {
    add_ln57_4_fu_468_p2 = (!zext_ln57_8_fu_465_p1.read().is_01() || !add_ln57_2_fu_459_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln57_8_fu_465_p1.read()) + sc_biguint<16>(add_ln57_2_fu_459_p2.read()));
}

void rgb2yuv11::thread_add_ln57_fu_439_p2() {
    add_ln57_fu_439_p2 = (!ap_const_lv10_80.is_01() || !zext_ln57_1_fu_418_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_80) + sc_biguint<10>(zext_ln57_1_fu_418_p1.read()));
}

void rgb2yuv11::thread_add_ln58_1_fu_519_p2() {
    add_ln58_1_fu_519_p2 = (!sub_ln58_fu_510_p2.read().is_01() || !sext_ln58_fu_516_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(sub_ln58_fu_510_p2.read()) + sc_bigint<16>(sext_ln58_fu_516_p1.read()));
}

void rgb2yuv11::thread_add_ln59_1_fu_559_p2() {
    add_ln59_1_fu_559_p2 = (!zext_ln59_2_fu_556_p1.read().is_01() || !sext_ln59_1_fu_552_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln59_2_fu_556_p1.read()) + sc_bigint<16>(sext_ln59_1_fu_552_p1.read()));
}

void rgb2yuv11::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void rgb2yuv11::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void rgb2yuv11::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[2];
}

void rgb2yuv11::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && ((esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch1_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch2_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch3_full_n.read()))));
}

void rgb2yuv11::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && ((esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch1_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch2_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch3_full_n.read()))));
}

void rgb2yuv11::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && ((esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch1_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch2_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch3_full_n.read()))));
}

void rgb2yuv11::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read()));
}

void rgb2yuv11::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = ((esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch1_full_n.read())) || (esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch2_full_n.read())) || (esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch3_full_n.read())));
}

void rgb2yuv11::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln45_fu_307_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void rgb2yuv11::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void rgb2yuv11::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_ap_phi_mux_x_0_i_i_phi_fu_281_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln45_reg_665.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_x_0_i_i_phi_fu_281_p4 = select_ln54_1_reg_674.read();
    } else {
        ap_phi_mux_x_0_i_i_phi_fu_281_p4 = x_0_i_i_reg_277.read();
    }
}

void rgb2yuv11::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void rgb2yuv11::thread_bound_fu_606_p0() {
    bound_fu_606_p0 =  (sc_lv<16>) (bound_fu_606_p00.read());
}

void rgb2yuv11::thread_bound_fu_606_p00() {
    bound_fu_606_p00 = esl_zext<32,16>(in_height.read());
}

void rgb2yuv11::thread_bound_fu_606_p1() {
    bound_fu_606_p1 =  (sc_lv<16>) (bound_fu_606_p10.read());
}

void rgb2yuv11::thread_bound_fu_606_p10() {
    bound_fu_606_p10 = esl_zext<32,16>(in_width.read());
}

void rgb2yuv11::thread_grp_fu_612_p0() {
    grp_fu_612_p0 =  (sc_lv<6>) (ap_const_lv13_19);
}

void rgb2yuv11::thread_grp_fu_612_p1() {
    grp_fu_612_p1 =  (sc_lv<8>) (grp_fu_612_p10.read());
}

void rgb2yuv11::thread_grp_fu_612_p10() {
    grp_fu_612_p10 = esl_zext<13,8>(B_reg_718.read());
}

void rgb2yuv11::thread_grp_fu_612_p2() {
    grp_fu_612_p2 =  (sc_lv<8>) (grp_fu_612_p20.read());
}

void rgb2yuv11::thread_grp_fu_612_p20() {
    grp_fu_612_p20 = esl_zext<13,8>(G_reg_711.read());
}

void rgb2yuv11::thread_grp_fu_621_p0() {
    grp_fu_621_p0 =  (sc_lv<7>) (ap_const_lv15_7FDA);
}

void rgb2yuv11::thread_grp_fu_621_p1() {
    grp_fu_621_p1 =  (sc_lv<8>) (zext_ln59_fu_397_p1.read());
}

void rgb2yuv11::thread_grp_fu_621_p2() {
    grp_fu_621_p2 =  (sc_lv<9>) (ap_const_lv15_80);
}

void rgb2yuv11::thread_grp_fu_630_p0() {
    grp_fu_630_p0 =  (sc_lv<8>) (ap_const_lv15_7A);
}

void rgb2yuv11::thread_grp_fu_630_p1() {
    grp_fu_630_p1 =  (sc_lv<8>) (zext_ln59_fu_397_p1.read());
}

void rgb2yuv11::thread_grp_fu_630_p2() {
    grp_fu_630_p2 =  (sc_lv<9>) (ap_const_lv15_80);
}

void rgb2yuv11::thread_grp_fu_639_p0() {
    grp_fu_639_p0 =  (sc_lv<8>) (ap_const_lv16_FFB6);
}

void rgb2yuv11::thread_grp_fu_639_p1() {
    grp_fu_639_p1 =  (sc_lv<8>) (zext_ln57_2_fu_565_p1.read());
}

void rgb2yuv11::thread_grp_fu_647_p0() {
    grp_fu_647_p0 =  (sc_lv<8>) (ap_const_lv16_FFA2);
}

void rgb2yuv11::thread_grp_fu_647_p1() {
    grp_fu_647_p1 =  (sc_lv<8>) (zext_ln57_2_fu_565_p1.read());
}

void rgb2yuv11::thread_icmp_ln45_fu_307_p2() {
    icmp_ln45_fu_307_p2 = (!indvar_flatten_reg_266.read().is_01() || !bound_reg_660.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_266.read() == bound_reg_660.read());
}

void rgb2yuv11::thread_icmp_ln48_fu_324_p2() {
    icmp_ln48_fu_324_p2 = (!y_0_i_i_reg_288.read().is_01() || !in_height.read().is_01())? sc_lv<1>(): sc_lv<1>(y_0_i_i_reg_288.read() == in_height.read());
}

void rgb2yuv11::thread_in_channels_ch1_address0() {
    in_channels_ch1_address0 =  (sc_lv<22>) (zext_ln54_1_fu_391_p1.read());
}

void rgb2yuv11::thread_in_channels_ch1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        in_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_in_channels_ch2_address0() {
    in_channels_ch2_address0 =  (sc_lv<22>) (zext_ln54_1_fu_391_p1.read());
}

void rgb2yuv11::thread_in_channels_ch2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        in_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_in_channels_ch3_address0() {
    in_channels_ch3_address0 =  (sc_lv<22>) (zext_ln54_1_fu_391_p1.read());
}

void rgb2yuv11::thread_in_channels_ch3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        in_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_channels_ch1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0))) {
        out_channels_ch1_blk_n = out_channels_ch1_full_n.read();
    } else {
        out_channels_ch1_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_channels_ch1_din() {
    out_channels_ch1_din = (!ap_const_lv8_10.is_01() || !trunc_ln_reg_726.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_10) + sc_biguint<8>(trunc_ln_reg_726.read()));
}

void rgb2yuv11::thread_out_channels_ch1_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_channels_ch1_write = ap_const_logic_1;
    } else {
        out_channels_ch1_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_channels_ch2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0))) {
        out_channels_ch2_blk_n = out_channels_ch2_full_n.read();
    } else {
        out_channels_ch2_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_channels_ch2_din() {
    out_channels_ch2_din = (trunc_ln5_fu_574_p4.read() ^ ap_const_lv8_80);
}

void rgb2yuv11::thread_out_channels_ch2_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_channels_ch2_write = ap_const_logic_1;
    } else {
        out_channels_ch2_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_channels_ch3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0))) {
        out_channels_ch3_blk_n = out_channels_ch3_full_n.read();
    } else {
        out_channels_ch3_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_channels_ch3_din() {
    out_channels_ch3_din = (trunc_ln6_fu_590_p4.read() ^ ap_const_lv8_80);
}

void rgb2yuv11::thread_out_channels_ch3_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(icmp_ln45_reg_665_pp0_iter5_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_channels_ch3_write = ap_const_logic_1;
    } else {
        out_channels_ch3_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_height_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        out_height_blk_n = out_height_full_n.read();
    } else {
        out_height_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_height_din() {
    out_height_din = in_height.read();
}

void rgb2yuv11::thread_out_height_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        out_height_write = ap_const_logic_1;
    } else {
        out_height_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_width_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        out_width_blk_n = out_width_full_n.read();
    } else {
        out_width_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_width_din() {
    out_width_din = in_width.read();
}

void rgb2yuv11::thread_out_width_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        out_width_write = ap_const_logic_1;
    } else {
        out_width_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void rgb2yuv11::thread_select_ln54_1_fu_337_p3() {
    select_ln54_1_fu_337_p3 = (!icmp_ln48_fu_324_p2.read()[0].is_01())? sc_lv<16>(): ((icmp_ln48_fu_324_p2.read()[0].to_bool())? x_fu_318_p2.read(): ap_phi_mux_x_0_i_i_phi_fu_281_p4.read());
}

void rgb2yuv11::thread_select_ln54_fu_329_p3() {
    select_ln54_fu_329_p3 = (!icmp_ln48_fu_324_p2.read()[0].is_01())? sc_lv<16>(): ((icmp_ln48_fu_324_p2.read()[0].to_bool())? ap_const_lv16_0: y_0_i_i_reg_288.read());
}

void rgb2yuv11::thread_sext_ln58_fu_516_p1() {
    sext_ln58_fu_516_p1 = esl_sext<16,15>(grp_fu_621_p3.read());
}

void rgb2yuv11::thread_sext_ln59_1_fu_552_p1() {
    sext_ln59_1_fu_552_p1 = esl_sext<16,14>(sub_ln59_1_fu_546_p2.read());
}

void rgb2yuv11::thread_sext_ln59_fu_531_p1() {
    sext_ln59_fu_531_p1 = esl_sext<14,13>(sub_ln59_fu_525_p2.read());
}

void rgb2yuv11::thread_shl_ln1_fu_484_p3() {
    shl_ln1_fu_484_p3 = esl_concat<8,7>(B_reg_718.read(), ap_const_lv7_0);
}

void rgb2yuv11::thread_shl_ln2_fu_535_p3() {
    shl_ln2_fu_535_p3 = esl_concat<8,1>(B_reg_718.read(), ap_const_lv1_0);
}

void rgb2yuv11::thread_shl_ln57_1_fu_411_p3() {
    shl_ln57_1_fu_411_p3 = esl_concat<8,1>(R_reg_704.read(), ap_const_lv1_0);
}

void rgb2yuv11::thread_shl_ln57_2_fu_425_p3() {
    shl_ln57_2_fu_425_p3 = esl_concat<8,7>(G_reg_711.read(), ap_const_lv7_0);
}

void rgb2yuv11::thread_shl_ln58_1_fu_495_p3() {
    shl_ln58_1_fu_495_p3 = esl_concat<8,4>(B_reg_718.read(), ap_const_lv4_0);
}

void rgb2yuv11::thread_shl_ln_fu_400_p3() {
    shl_ln_fu_400_p3 = esl_concat<8,6>(R_reg_704.read(), ap_const_lv6_0);
}

void rgb2yuv11::thread_start_out() {
    start_out = real_start.read();
}

void rgb2yuv11::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_sub_ln58_fu_510_p2() {
    sub_ln58_fu_510_p2 = (!zext_ln58_fu_491_p1.read().is_01() || !zext_ln58_2_fu_506_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln58_fu_491_p1.read()) - sc_biguint<16>(zext_ln58_2_fu_506_p1.read()));
}

void rgb2yuv11::thread_sub_ln59_1_fu_546_p2() {
    sub_ln59_1_fu_546_p2 = (!sext_ln59_fu_531_p1.read().is_01() || !zext_ln59_1_fu_542_p1.read().is_01())? sc_lv<14>(): (sc_bigint<14>(sext_ln59_fu_531_p1.read()) - sc_biguint<14>(zext_ln59_1_fu_542_p1.read()));
}

void rgb2yuv11::thread_sub_ln59_fu_525_p2() {
    sub_ln59_fu_525_p2 = (!ap_const_lv13_0.is_01() || !zext_ln58_1_fu_502_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_0) - sc_biguint<13>(zext_ln58_1_fu_502_p1.read()));
}

void rgb2yuv11::thread_trunc_ln54_1_fu_357_p1() {
    trunc_ln54_1_fu_357_p1 = select_ln54_1_fu_337_p3.read().range(15-1, 0);
}

void rgb2yuv11::thread_trunc_ln54_fu_345_p1() {
    trunc_ln54_fu_345_p1 = select_ln54_1_fu_337_p3.read().range(13-1, 0);
}

void rgb2yuv11::thread_trunc_ln5_fu_574_p4() {
    trunc_ln5_fu_574_p4 = grp_fu_639_p3.read().range(15, 8);
}

void rgb2yuv11::thread_trunc_ln6_fu_590_p4() {
    trunc_ln6_fu_590_p4 = grp_fu_647_p3.read().range(15, 8);
}

void rgb2yuv11::thread_x_fu_318_p2() {
    x_fu_318_p2 = (!ap_const_lv16_1.is_01() || !ap_phi_mux_x_0_i_i_phi_fu_281_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(ap_phi_mux_x_0_i_i_phi_fu_281_p4.read()));
}

void rgb2yuv11::thread_y_fu_385_p2() {
    y_fu_385_p2 = (!ap_const_lv16_1.is_01() || !select_ln54_fu_329_p3.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(select_ln54_fu_329_p3.read()));
}

void rgb2yuv11::thread_zext_ln54_1_fu_391_p1() {
    zext_ln54_1_fu_391_p1 = esl_zext<64,23>(add_ln54_1_reg_679.read());
}

void rgb2yuv11::thread_zext_ln54_2_cast_fu_361_p3() {
    zext_ln54_2_cast_fu_361_p3 = esl_concat<15,8>(trunc_ln54_1_fu_357_p1.read(), ap_const_lv8_0);
}

void rgb2yuv11::thread_zext_ln54_cast_fu_349_p3() {
    zext_ln54_cast_fu_349_p3 = esl_concat<13,10>(trunc_ln54_fu_345_p1.read(), ap_const_lv10_0);
}

void rgb2yuv11::thread_zext_ln54_fu_375_p1() {
    zext_ln54_fu_375_p1 = esl_zext<23,16>(select_ln54_fu_329_p3.read());
}

void rgb2yuv11::thread_zext_ln57_1_fu_418_p1() {
    zext_ln57_1_fu_418_p1 = esl_zext<10,9>(shl_ln57_1_fu_411_p3.read());
}

void rgb2yuv11::thread_zext_ln57_2_fu_565_p1() {
    zext_ln57_2_fu_565_p1 = esl_zext<16,8>(G_reg_711_pp0_iter5_reg.read());
}

void rgb2yuv11::thread_zext_ln57_4_fu_432_p1() {
    zext_ln57_4_fu_432_p1 = esl_zext<16,15>(shl_ln57_2_fu_425_p3.read());
}

void rgb2yuv11::thread_zext_ln57_6_fu_445_p1() {
    zext_ln57_6_fu_445_p1 = esl_zext<15,10>(add_ln57_fu_439_p2.read());
}

void rgb2yuv11::thread_zext_ln57_7_fu_455_p1() {
    zext_ln57_7_fu_455_p1 = esl_zext<16,15>(add_ln57_1_fu_449_p2.read());
}

void rgb2yuv11::thread_zext_ln57_8_fu_465_p1() {
    zext_ln57_8_fu_465_p1 = esl_zext<16,13>(grp_fu_612_p3.read());
}

void rgb2yuv11::thread_zext_ln57_fu_407_p1() {
    zext_ln57_fu_407_p1 = esl_zext<15,14>(shl_ln_fu_400_p3.read());
}

void rgb2yuv11::thread_zext_ln58_1_fu_502_p1() {
    zext_ln58_1_fu_502_p1 = esl_zext<13,12>(shl_ln58_1_fu_495_p3.read());
}

void rgb2yuv11::thread_zext_ln58_2_fu_506_p1() {
    zext_ln58_2_fu_506_p1 = esl_zext<16,12>(shl_ln58_1_fu_495_p3.read());
}

void rgb2yuv11::thread_zext_ln58_fu_491_p1() {
    zext_ln58_fu_491_p1 = esl_zext<16,15>(shl_ln1_fu_484_p3.read());
}

void rgb2yuv11::thread_zext_ln59_1_fu_542_p1() {
    zext_ln59_1_fu_542_p1 = esl_zext<14,9>(shl_ln2_fu_535_p3.read());
}

void rgb2yuv11::thread_zext_ln59_2_fu_556_p1() {
    zext_ln59_2_fu_556_p1 = esl_zext<16,15>(grp_fu_630_p3.read());
}

void rgb2yuv11::thread_zext_ln59_fu_397_p1() {
    zext_ln59_fu_397_p1 = esl_zext<15,8>(R_reg_704.read());
}

void rgb2yuv11::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln45_fu_307_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter5.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln45_fu_307_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

