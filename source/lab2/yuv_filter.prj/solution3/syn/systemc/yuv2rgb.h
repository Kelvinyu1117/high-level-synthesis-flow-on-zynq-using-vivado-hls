// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _yuv2rgb_HH_
#define _yuv2rgb_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "yuv_filter_mul_mubkb.h"
#include "yuv_filter_mac_mug8j.h"
#include "yuv_filter_mac_muhbi.h"
#include "yuv_filter_mac_muibs.h"

namespace ap_rtl {

struct yuv2rgb : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > in_channels_ch1_dout;
    sc_in< sc_logic > in_channels_ch1_empty_n;
    sc_out< sc_logic > in_channels_ch1_read;
    sc_in< sc_lv<8> > in_channels_ch2_dout;
    sc_in< sc_logic > in_channels_ch2_empty_n;
    sc_out< sc_logic > in_channels_ch2_read;
    sc_in< sc_lv<8> > in_channels_ch3_dout;
    sc_in< sc_logic > in_channels_ch3_empty_n;
    sc_out< sc_logic > in_channels_ch3_read;
    sc_in< sc_lv<16> > in_width_dout;
    sc_in< sc_logic > in_width_empty_n;
    sc_out< sc_logic > in_width_read;
    sc_in< sc_lv<16> > in_height_dout;
    sc_in< sc_logic > in_height_empty_n;
    sc_out< sc_logic > in_height_read;
    sc_out< sc_lv<22> > out_channels_ch1_address0;
    sc_out< sc_logic > out_channels_ch1_ce0;
    sc_out< sc_logic > out_channels_ch1_we0;
    sc_out< sc_lv<8> > out_channels_ch1_d0;
    sc_out< sc_lv<22> > out_channels_ch2_address0;
    sc_out< sc_logic > out_channels_ch2_ce0;
    sc_out< sc_logic > out_channels_ch2_we0;
    sc_out< sc_lv<8> > out_channels_ch2_d0;
    sc_out< sc_lv<22> > out_channels_ch3_address0;
    sc_out< sc_logic > out_channels_ch3_ce0;
    sc_out< sc_logic > out_channels_ch3_we0;
    sc_out< sc_lv<8> > out_channels_ch3_d0;
    sc_out< sc_lv<16> > out_width;
    sc_out< sc_logic > out_width_ap_vld;
    sc_out< sc_lv<16> > out_height;
    sc_out< sc_logic > out_height_ap_vld;


    // Module declarations
    yuv2rgb(sc_module_name name);
    SC_HAS_PROCESS(yuv2rgb);

    ~yuv2rgb();

    sc_trace_file* mVcdFile;

    yuv_filter_mul_mubkb<1,1,16,16,32>* yuv_filter_mul_mubkb_U42;
    yuv_filter_mac_mug8j<1,1,10,9,9,18>* yuv_filter_mac_mug8j_U43;
    yuv_filter_mac_muhbi<1,1,10,8,18,18>* yuv_filter_mac_muhbi_U44;
    yuv_filter_mac_muibs<1,1,8,8,17,17>* yuv_filter_mac_muibs_U45;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_channels_ch1_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln85_reg_649;
    sc_signal< sc_logic > in_channels_ch2_blk_n;
    sc_signal< sc_logic > in_channels_ch3_blk_n;
    sc_signal< sc_logic > in_width_blk_n;
    sc_signal< sc_logic > in_height_blk_n;
    sc_signal< sc_lv<32> > indvar_flatten_reg_205;
    sc_signal< sc_lv<16> > x_0_reg_216;
    sc_signal< sc_lv<16> > y_0_reg_228;
    sc_signal< sc_lv<16> > width_reg_631;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<16> > height_reg_637;
    sc_signal< sc_lv<32> > bound_fu_598_p2;
    sc_signal< sc_lv<32> > bound_reg_644;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln85_fu_246_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln85_reg_649_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln85_reg_649_pp0_iter2_reg;
    sc_signal< sc_lv<32> > add_ln85_fu_251_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > U_reg_658;
    sc_signal< sc_lv<8> > V_reg_663;
    sc_signal< sc_lv<9> > C_fu_261_p2;
    sc_signal< sc_lv<9> > C_reg_668;
    sc_signal< sc_lv<16> > select_ln94_1_fu_286_p3;
    sc_signal< sc_lv<16> > select_ln94_1_reg_673;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<23> > add_ln103_1_fu_328_p2;
    sc_signal< sc_lv<23> > add_ln103_1_reg_678;
    sc_signal< sc_lv<18> > grp_fu_604_p3;
    sc_signal< sc_lv<18> > add_ln100_reg_683;
    sc_signal< sc_lv<18> > grp_fu_614_p3;
    sc_signal< sc_lv<18> > add_ln100_1_reg_688;
    sc_signal< sc_lv<1> > icmp_ln100_fu_367_p2;
    sc_signal< sc_lv<1> > icmp_ln100_reg_694;
    sc_signal< sc_lv<17> > grp_fu_623_p3;
    sc_signal< sc_lv<17> > add_ln101_reg_700;
    sc_signal< sc_lv<8> > B_fu_476_p3;
    sc_signal< sc_lv<8> > B_reg_705;
    sc_signal< sc_lv<16> > y_fu_484_p2;
    sc_signal< sc_lv<16> > y_reg_710;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<16> > ap_phi_mux_x_0_phi_fu_220_p4;
    sc_signal< sc_lv<16> > ap_phi_mux_y_0_phi_fu_232_p4;
    sc_signal< sc_lv<64> > zext_ln103_1_fu_490_p1;
    sc_signal< sc_lv<9> > zext_ln97_fu_257_p1;
    sc_signal< sc_lv<1> > icmp_ln88_fu_273_p2;
    sc_signal< sc_lv<16> > x_fu_267_p2;
    sc_signal< sc_lv<13> > trunc_ln103_fu_294_p1;
    sc_signal< sc_lv<15> > trunc_ln103_1_fu_306_p1;
    sc_signal< sc_lv<23> > zext_ln103_1_cast_fu_310_p3;
    sc_signal< sc_lv<23> > zext_ln103_cast_fu_298_p3;
    sc_signal< sc_lv<16> > select_ln94_fu_278_p3;
    sc_signal< sc_lv<23> > add_ln103_fu_318_p2;
    sc_signal< sc_lv<23> > zext_ln103_fu_324_p1;
    sc_signal< sc_lv<8> > E_fu_339_p2;
    sc_signal< sc_lv<2> > tmp_fu_358_p4;
    sc_signal< sc_lv<8> > D_fu_334_p2;
    sc_signal< sc_lv<8> > mul_ln101_1_fu_377_p1;
    sc_signal< sc_lv<17> > shl_ln_fu_383_p3;
    sc_signal< sc_lv<10> > shl_ln102_1_fu_395_p3;
    sc_signal< sc_lv<18> > sext_ln102_fu_391_p1;
    sc_signal< sc_lv<18> > sext_ln102_1_fu_403_p1;
    sc_signal< sc_lv<18> > add_ln102_1_fu_407_p2;
    sc_signal< sc_lv<19> > sext_ln100_1_fu_355_p1;
    sc_signal< sc_lv<19> > sext_ln102_2_fu_413_p1;
    sc_signal< sc_lv<19> > add_ln102_fu_422_p2;
    sc_signal< sc_lv<3> > tmp_5_fu_428_p4;
    sc_signal< sc_lv<18> > add_ln102_2_fu_417_p2;
    sc_signal< sc_lv<1> > icmp_ln102_fu_438_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_444_p3;
    sc_signal< sc_lv<1> > or_ln102_fu_470_p2;
    sc_signal< sc_lv<8> > select_ln102_fu_462_p3;
    sc_signal< sc_lv<8> > trunc_ln4_fu_452_p4;
    sc_signal< sc_lv<1> > tmp_1_fu_496_p3;
    sc_signal< sc_lv<1> > or_ln100_fu_519_p2;
    sc_signal< sc_lv<8> > select_ln100_fu_512_p3;
    sc_signal< sc_lv<8> > trunc_ln_fu_503_p4;
    sc_signal< sc_lv<18> > sext_ln101_3_fu_533_p1;
    sc_signal< sc_lv<18> > add_ln101_1_fu_536_p2;
    sc_signal< sc_lv<2> > tmp_3_fu_541_p4;
    sc_signal< sc_lv<1> > icmp_ln101_fu_551_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_557_p3;
    sc_signal< sc_lv<1> > or_ln101_fu_583_p2;
    sc_signal< sc_lv<8> > select_ln101_fu_575_p3;
    sc_signal< sc_lv<8> > trunc_ln3_fu_565_p4;
    sc_signal< sc_lv<16> > bound_fu_598_p0;
    sc_signal< sc_lv<16> > bound_fu_598_p1;
    sc_signal< sc_lv<10> > grp_fu_604_p0;
    sc_signal< sc_lv<9> > grp_fu_604_p2;
    sc_signal< sc_lv<10> > grp_fu_614_p0;
    sc_signal< sc_lv<8> > grp_fu_623_p0;
    sc_signal< sc_lv<17> > grp_fu_623_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<32> > bound_fu_598_p00;
    sc_signal< sc_lv<32> > bound_fu_598_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<9> ap_const_lv9_1F0;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<17> ap_const_lv17_1FF30;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<18> ap_const_lv18_12A;
    static const sc_lv<18> ap_const_lv18_80;
    static const sc_lv<18> ap_const_lv18_199;
    static const sc_lv<16> ap_const_lv16_FF9C;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_B_fu_476_p3();
    void thread_C_fu_261_p2();
    void thread_D_fu_334_p2();
    void thread_E_fu_339_p2();
    void thread_add_ln101_1_fu_536_p2();
    void thread_add_ln102_1_fu_407_p2();
    void thread_add_ln102_2_fu_417_p2();
    void thread_add_ln102_fu_422_p2();
    void thread_add_ln103_1_fu_328_p2();
    void thread_add_ln103_fu_318_p2();
    void thread_add_ln85_fu_251_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_x_0_phi_fu_220_p4();
    void thread_ap_phi_mux_y_0_phi_fu_232_p4();
    void thread_ap_ready();
    void thread_bound_fu_598_p0();
    void thread_bound_fu_598_p00();
    void thread_bound_fu_598_p1();
    void thread_bound_fu_598_p10();
    void thread_grp_fu_604_p0();
    void thread_grp_fu_604_p2();
    void thread_grp_fu_614_p0();
    void thread_grp_fu_623_p0();
    void thread_grp_fu_623_p2();
    void thread_icmp_ln100_fu_367_p2();
    void thread_icmp_ln101_fu_551_p2();
    void thread_icmp_ln102_fu_438_p2();
    void thread_icmp_ln85_fu_246_p2();
    void thread_icmp_ln88_fu_273_p2();
    void thread_in_channels_ch1_blk_n();
    void thread_in_channels_ch1_read();
    void thread_in_channels_ch2_blk_n();
    void thread_in_channels_ch2_read();
    void thread_in_channels_ch3_blk_n();
    void thread_in_channels_ch3_read();
    void thread_in_height_blk_n();
    void thread_in_height_read();
    void thread_in_width_blk_n();
    void thread_in_width_read();
    void thread_mul_ln101_1_fu_377_p1();
    void thread_or_ln100_fu_519_p2();
    void thread_or_ln101_fu_583_p2();
    void thread_or_ln102_fu_470_p2();
    void thread_out_channels_ch1_address0();
    void thread_out_channels_ch1_ce0();
    void thread_out_channels_ch1_d0();
    void thread_out_channels_ch1_we0();
    void thread_out_channels_ch2_address0();
    void thread_out_channels_ch2_ce0();
    void thread_out_channels_ch2_d0();
    void thread_out_channels_ch2_we0();
    void thread_out_channels_ch3_address0();
    void thread_out_channels_ch3_ce0();
    void thread_out_channels_ch3_d0();
    void thread_out_channels_ch3_we0();
    void thread_out_height();
    void thread_out_height_ap_vld();
    void thread_out_width();
    void thread_out_width_ap_vld();
    void thread_select_ln100_fu_512_p3();
    void thread_select_ln101_fu_575_p3();
    void thread_select_ln102_fu_462_p3();
    void thread_select_ln94_1_fu_286_p3();
    void thread_select_ln94_fu_278_p3();
    void thread_sext_ln100_1_fu_355_p1();
    void thread_sext_ln101_3_fu_533_p1();
    void thread_sext_ln102_1_fu_403_p1();
    void thread_sext_ln102_2_fu_413_p1();
    void thread_sext_ln102_fu_391_p1();
    void thread_shl_ln102_1_fu_395_p3();
    void thread_shl_ln_fu_383_p3();
    void thread_tmp_1_fu_496_p3();
    void thread_tmp_3_fu_541_p4();
    void thread_tmp_4_fu_557_p3();
    void thread_tmp_5_fu_428_p4();
    void thread_tmp_6_fu_444_p3();
    void thread_tmp_fu_358_p4();
    void thread_trunc_ln103_1_fu_306_p1();
    void thread_trunc_ln103_fu_294_p1();
    void thread_trunc_ln3_fu_565_p4();
    void thread_trunc_ln4_fu_452_p4();
    void thread_trunc_ln_fu_503_p4();
    void thread_x_fu_267_p2();
    void thread_y_fu_484_p2();
    void thread_zext_ln103_1_cast_fu_310_p3();
    void thread_zext_ln103_1_fu_490_p1();
    void thread_zext_ln103_cast_fu_298_p3();
    void thread_zext_ln103_fu_324_p1();
    void thread_zext_ln97_fu_257_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
